{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/components/molecules/app-bar/app-bar-end-elements.directive.ts","./src/app/components/molecules/app-bar/app-bar-start-elements.directive.ts","./src/app/components/molecules/app-bar/app-bar.component.ts","./src/app/components/molecules/drag-drop-slider/drag-and-drop-state.service.ts","./src/app/components/molecules/drag-drop-slider/drag-drop-slider.component.ts","./src/app/components/organisms/document-download-button/document-download-button.component.ts","./src/app/components/organisms/document-list-element/document-list-element.component.ts","./src/app/components/organisms/document-list/document-list.component.ts","./src/app/components/organisms/document-share-button/document-share-button.component.ts","./src/app/components/organisms/document/document.component.ts","./src/app/components/pages/document-page/document-page.component.ts","./src/app/components/pages/route-not-found-page/route-not-found-page.component.ts","./src/app/components/pages/wallet-page/map-to-document-model.utils.ts","./src/app/components/pages/wallet-page/wallet-page.component.ts","./src/app/components/templates/page-template/page-template-header.directive.ts","./src/app/components/templates/page-template/page-template.component.ts","./src/app/models/DocumentType.enum.ts","./src/app/modules/camera-module/camera-control-strip/camera-control-strip.component.ts","./src/app/modules/camera-module/camera-dialog/camera-dialog.component.ts","./src/app/modules/camera-module/camera-video/camera-video.component.ts","./src/app/modules/camera-module/camera.module.ts","./src/app/modules/camera-module/polyfills/image-capture-api.polyfill.ts","./src/app/modules/camera-module/services/CameraTypeEnum.ts","./src/app/modules/camera-module/services/camera-dialog.service.ts","./src/app/modules/camera-module/services/camera.service.ts","./src/app/modules/camera-module/services/feature-detection.service.factory.ts","./src/app/modules/camera-module/services/feature-detection.service.ts","./src/app/modules/camera-module/services/image-capture.utils.ts","./src/app/modules/camera-module/services/js-qrcode-reader.service.ts","./src/app/modules/camera-module/services/native-qrcode-reader.service.ts","./src/app/modules/camera-module/services/qrcode-reader.service.provider.ts","./src/app/modules/camera-module/services/qrcode-reader.service.ts","./src/app/modules/commons/commons.module.ts","./src/app/modules/commons/components/install-pwabutton/install-pwabutton.component.ts","./src/app/modules/commons/pipes/shorten.pipe.ts","./src/app/modules/commons/services/install-pompt.service.factory.ts","./src/app/modules/commons/services/install-prompt.service.provider.ts","./src/app/modules/commons/services/install-prompt.service.ts","./src/app/modules/commons/utils/image-conversion.utils.ts","./src/app/modules/document-module-api/components/pages/abstract-document-download-button/abstract-document-download-button.component.ts","./src/app/modules/document-module-api/components/pages/abstract-document-preview/abstract-document-preview.component.ts","./src/app/modules/document-module-api/components/pages/abstract-document-share-button/abstract-document-share-button.component.ts","./src/app/modules/document-module-api/components/pages/abstract-document/abstract-document.component.ts","./src/app/modules/document-module-api/components/templates/document-preview-template/document-preview-template.component.ts","./src/app/modules/document-module-api/components/templates/document-template/document-template.component.ts","./src/app/modules/document-module-api/directives/document-preview-actions.directive.ts","./src/app/modules/document-module-api/directives/document-preview-expanded-content.directive.ts","./src/app/modules/document-module-api/directives/document-preview-header.directive.ts","./src/app/modules/document-module-api/document-module-api.module.ts","./src/app/modules/file-system/file-system.module.ts","./src/app/modules/file-system/services/FileSystem.service.ts","./src/app/modules/file-system/services/dom-file-api.service.ts","./src/app/modules/file-system/services/file-system-access-api.service.ts","./src/app/modules/file-system/utils/FilePickerAcceptTypes.constants.ts","./src/app/modules/file-system/utils/dom-file-api.utils.ts","./src/app/modules/file-system/utils/file-system-access-api.utils.ts","./src/app/modules/health-certificate/CertificateType.enum.ts","./src/app/modules/health-certificate/components/molecules/certificate-card-chip-list/certificate-card-chip-list.component.ts","./src/app/modules/health-certificate/components/molecules/certificate-card-header/certificate-card-header.component.ts","./src/app/modules/health-certificate/components/molecules/person-detail/person-detail.component.ts","./src/app/modules/health-certificate/components/molecules/recovery-detail/recovery-detail.component.ts","./src/app/modules/health-certificate/components/molecules/test-detail/test-detail.component.ts","./src/app/modules/health-certificate/components/molecules/vaccination-detail/vaccination-detail.component.ts","./src/app/modules/health-certificate/components/organisms/health-certificate-abstract-button/health-certificate-abstract-button.component.ts","./src/app/modules/health-certificate/components/organisms/health-certificate-card/certificate-type.utils.ts","./src/app/modules/health-certificate/components/organisms/health-certificate-card/heatlh-certificate-card.component.ts","./src/app/modules/health-certificate/components/pages/health-certificate-download-button/health-certificate-download-button.component.ts","./src/app/modules/health-certificate/components/pages/health-certificate-preview/health-certificate-preview-actions.directive.ts","./src/app/modules/health-certificate/components/pages/health-certificate-preview/health-certificate-preview.component.ts","./src/app/modules/health-certificate/components/pages/health-certificate/health-certificate.component.ts","./src/app/modules/health-certificate/components/pages/helth-certificate-share-button/health-certificate-share-button.component.ts","./src/app/modules/health-certificate/health-certificate.module.ts","./src/app/modules/health-certificate/pipes/VaccineManufacturer.pipe.ts","./src/app/modules/health-certificate/pipes/certificate-type-name.pipe.ts","./src/app/modules/health-certificate/pipes/certificate-type.pipe.ts","./src/app/modules/health-certificate/pipes/target-disease.pipe.ts","./src/app/modules/health-certificate/pipes/test-manufacturer.pipe.ts","./src/app/modules/health-certificate/pipes/test-type.pipe.ts","./src/app/modules/health-certificate/pipes/to-certificate-type-icon.pipe.ts","./src/app/modules/health-certificate/pipes/to-country-name.pipe.ts","./src/app/modules/health-certificate/pipes/to-display-name.pipe.ts","./src/app/modules/health-certificate/pipes/to-locale-date.pipe.ts","./src/app/modules/health-certificate/pipes/to-test-result.pipe.ts","./src/app/modules/health-certificate/pipes/vaccine-type.pipe.ts","./src/app/modules/health-certificate/pipes/vaccine.pipe.ts","./src/app/modules/health-certificate/services/covid-certificate.service.ts","./src/app/modules/health-certificate/services/document-signer-certificate-service.service.ts","./src/app/modules/pkpass/PassType.enum.ts","./src/app/modules/pkpass/components/atoms/boarding-pass-primary-field/boarding-pass-primary-field.component.ts","./src/app/modules/pkpass/components/atoms/transit-type-icon/transit-type-icon.component.ts","./src/app/modules/pkpass/components/molecules/boarding-pass-primary-field-list/boarding-pass-primary-field-list.component.ts","./src/app/modules/pkpass/components/molecules/pkpass-barcode/pkpass-barcode.component.ts","./src/app/modules/pkpass/components/molecules/pkpass-field-list/pkpass-field-list.component.ts","./src/app/modules/pkpass/components/molecules/pkpass-header-field-list/pkpass-header-field-list.component.ts","./src/app/modules/pkpass/components/molecules/pkpass-primary-fields/pkpass-primary-fields.component.ts","./src/app/modules/pkpass/components/organisms/pkpass-card-header/pkpass-card-header.component.ts","./src/app/modules/pkpass/components/organisms/pkpass-card/pkpass-card.component.ts","./src/app/modules/pkpass/components/pages/pkpass-download-button/pkpass-download-button.component.ts","./src/app/modules/pkpass/components/pages/pkpass-preview/pkpass-preview.component.ts","./src/app/modules/pkpass/components/pages/pkpass-share-button/pkpass-share-button.component.ts","./src/app/modules/pkpass/components/pages/pkpass/pkpass.component.ts","./src/app/modules/pkpass/directives/pkpass-preview-actions.directive.ts","./src/app/modules/pkpass/pipes/pass-structure-to-transit-type.pipe.ts","./src/app/modules/pkpass/pipes/pkpass-transit-type-icon.pipe.ts","./src/app/modules/pkpass/pipes/transform-pkpass-barcode-format.pipe.ts","./src/app/modules/pkpass/pkpass.module.ts","./src/app/modules/pkpass/services/pkpass.service.ts","./src/app/modules/pkpass/services/pkpass.utils.ts","./src/app/modules/qrcode-generator/components/barcode/barcode.component.ts","./src/app/modules/qrcode-generator/components/qrcode/qrcode.component.ts","./src/app/modules/qrcode-generator/pipes/to-barcode.pipe.ts","./src/app/modules/qrcode-generator/qrcode-generator.module.ts","./src/app/modules/qrcode-generator/services/BarcodeType.enum.ts","./src/app/modules/qrcode-generator/services/barcode-generator.service.ts","./src/app/modules/qrcode-generator/services/qrcode-generator.service.ts","./src/app/modules/ui-components/components/atoms/blob-image/blob-image.component.ts","./src/app/modules/ui-components/components/atoms/empty/empty.component.ts","./src/app/modules/ui-components/components/atoms/icon-button/icon-button.component.ts","./src/app/modules/ui-components/components/atoms/non-freezing-spinner/non-freezing-spinner.component.ts","./src/app/modules/ui-components/components/molecules/action-menu/action-menu.component.ts","./src/app/modules/ui-components/components/molecules/default-expansion-panel/default-expansion-panel.component.ts","./src/app/modules/ui-components/components/molecules/download-button/download-button.component.ts","./src/app/modules/ui-components/components/molecules/share-button/share-button.component.ts","./src/app/modules/ui-components/components/organisms/action-menu-sheet/action-menu-sheet.component.ts","./src/app/modules/ui-components/services/action-menu-sheet.service.ts","./src/app/modules/ui-components/services/overlay.service.ts","./src/app/modules/ui-components/services/user-message.service.ts","./src/app/modules/ui-components/ui-components.module.ts","./src/app/modules/web-share/pipes/file-to-share-data.pipe.ts","./src/app/modules/web-share/services/web-share.service.ts","./src/app/modules/web-share/web-share.module.ts","./src/app/pipes/sort-by-array.pipe.ts","./src/app/store/document-store.service.ts","./src/app/store/sort-store.service.ts","./src/app/the-wallet-routing.module.ts","./src/app/the-wallet.component.ts","./src/app/the-wallet.component.html","./src/app/the-wallet.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[theWalletAppBarEndElements]',\n})\nexport class AppBarEndElementsDirective {\n  constructor() {}\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[theWalletAppBarStartElements]',\n})\nexport class AppBarStartElementsDirective {\n  constructor() {}\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'the-wallet-app-bar',\n  template: `\n    <mat-toolbar class=\"toolbar\" color=\"primary\">\n      <ng-content select=\"[theWalletAppBarStartElements]\"></ng-content>\n      <span>{{ title }}</span>\n      <div class=\"app-bar-end-elements\">\n        <ng-content select=\"[theWalletAppBarEndElements]\"></ng-content>\n      </div>\n    </mat-toolbar>\n    <!--Used as placeholder, so content is not hidden under Toolbar-->\n    <mat-toolbar color=\"primary\"> </mat-toolbar>\n  `,\n  styleUrls: ['./app-bar.component.scss'],\n})\nexport class AppBarComponent {\n  @Input()\n  title = '';\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DragAndDropStateService {\r\n  dragAndDropEnabledSource = new BehaviorSubject<boolean>(false);\r\n  dragAndDropEnabled$ = this.dragAndDropEnabledSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  setDragAndDropState(dragDropEnabled: boolean) {\r\n    this.dragAndDropEnabledSource.next(dragDropEnabled);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DragAndDropStateService } from './drag-and-drop-state.service';\r\n\r\n@Component({\r\n  selector: 'the-wallet-drag-drop-slider',\r\n  template: `\r\n    <mat-slide-toggle [formControl]=\"dragAndDropEnabled\"\r\n      ><mat-icon>touch_app</mat-icon></mat-slide-toggle\r\n    >\r\n  `,\r\n  styleUrls: ['./drag-drop-slider.component.scss'],\r\n})\r\nexport class DragDropSliderComponent {\r\n  dragAndDropEnabled = new FormControl(false);\r\n\r\n  constructor(dragAndDropState: DragAndDropStateService) {\r\n    this.dragAndDropEnabled.valueChanges.subscribe((value) =>\r\n      dragAndDropState.setDragAndDropState(value)\r\n    );\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\nimport { DocumentTypeEnum } from '../../../models/DocumentType.enum';\r\nimport { FileSystemService } from '../../../modules/file-system/services/FileSystem.service';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-download-button',\r\n  template: `\r\n    <ng-container *ngIf=\"value\" [ngSwitch]=\"value.type\">\r\n      <the-wallet-health-certificate-download-button\r\n        *ngSwitchCase=\"documentTypeEnum.HEALTHCERTIFICATE\"\r\n        [value]=\"value.content\"\r\n        (download)=\"onDownload($event)\"\r\n      >\r\n      </the-wallet-health-certificate-download-button>\r\n      <the-wallet-pkpass-download-button\r\n        *ngSwitchCase=\"documentTypeEnum.PKPASS\"\r\n        [value]=\"value.content\"\r\n        (download)=\"onDownload($event)\"\r\n      >\r\n      </the-wallet-pkpass-download-button>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./document-download-button.component.scss'],\r\n})\r\nexport class DocumentDownloadButtonComponent {\r\n  static readonly DEFAULT_FILE_EXTENSION = '.png';\r\n  static readonly DEFAULT_MIME_TYPE = 'image/png';\r\n\r\n  @Input()\r\n  value?: DocumentModel;\r\n\r\n  @Output()\r\n  error = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  documentDownloaded = new EventEmitter<DocumentModel>();\r\n\r\n  documentTypeEnum = DocumentTypeEnum;\r\n\r\n  constructor(private fileSystemService: FileSystemService) {}\r\n\r\n  onDownload(download: [File, string?]) {\r\n    const [file, fileName] = download;\r\n    const mimeType = file.type\r\n      ? file.type\r\n      : DocumentDownloadButtonComponent.DEFAULT_MIME_TYPE;\r\n    const fileExtension = file.type\r\n      ? '.' + file.type.split('/')[1]\r\n      : DocumentDownloadButtonComponent.DEFAULT_FILE_EXTENSION;\r\n\r\n    let fileTypeRecord: Record<string, string> = {};\r\n    fileTypeRecord[mimeType] = fileExtension;\r\n\r\n    this.fileSystemService\r\n      .writeFile(file, fileName, [\r\n        {\r\n          accept: fileTypeRecord,\r\n        },\r\n      ])\r\n      .subscribe({\r\n        next: () => this.documentDownloaded.emit(this.value),\r\n        error: (err) => this.error.emit(err),\r\n      });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\nimport { DocumentTypeEnum } from '../../../models/DocumentType.enum';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-list-element',\r\n  template: `\r\n    <ng-container [ngSwitch]=\"value.type\">\r\n      <the-wallet-health-certificate-preview\r\n        *ngSwitchCase=\"documentTypeEnum.HEALTHCERTIFICATE\"\r\n        class=\"cursor-link\"\r\n        [value]=\"value.content\"\r\n        [expand]=\"isFirst\"\r\n        (showMore)=\"showMore.emit(value.id)\"\r\n      >\r\n        <ng-container theWalletHealthCertificatePreviewActions>\r\n          <the-wallet-icon-button (click)=\"delete.emit(value.id)\">\r\n            delete_forever\r\n          </the-wallet-icon-button>\r\n          <the-wallet-document-share-button\r\n            [value]=\"value\"\r\n            (error)=\"error.emit($event)\"\r\n            (documentShared)=\"documentShared.emit(value)\"\r\n          >\r\n          </the-wallet-document-share-button>\r\n          <the-wallet-document-download-button\r\n            [value]=\"value\"\r\n            (error)=\"error.emit($event)\"\r\n            (documentDownloaded)=\"documentDownloaded.emit(value)\"\r\n          >\r\n          </the-wallet-document-download-button>\r\n        </ng-container>\r\n      </the-wallet-health-certificate-preview>\r\n      <the-wallet-pkpass-preview\r\n        *ngSwitchCase=\"documentTypeEnum.PKPASS\"\r\n        [value]=\"value.content\"\r\n        [expand]=\"isFirst\"\r\n        (showMore)=\"showMore.emit(value.id)\"\r\n        class=\"cursor-link\"\r\n      >\r\n        <ng-container theWalletPkpassPreviewActions>\r\n          <the-wallet-icon-button (click)=\"delete.emit(value.id)\">\r\n            delete_forever\r\n          </the-wallet-icon-button>\r\n          <the-wallet-document-share-button\r\n            [value]=\"value\"\r\n            (error)=\"error.emit($event)\"\r\n            (documentShared)=\"documentShared.emit(value)\"\r\n          >\r\n          </the-wallet-document-share-button>\r\n          <the-wallet-document-download-button\r\n            [value]=\"value\"\r\n            (error)=\"error.emit($event)\"\r\n            (documentDownloaded)=\"documentDownloaded.emit(value)\"\r\n          >\r\n          </the-wallet-document-download-button>\r\n        </ng-container>\r\n      </the-wallet-pkpass-preview>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./document-list-element.component.scss'],\r\n})\r\nexport class DocumentListElementComponent {\r\n  @Input()\r\n  value!: DocumentModel;\r\n\r\n  @Input()\r\n  isFirst = false;\r\n\r\n  @Input()\r\n  link?: string | any[];\r\n\r\n  @Output()\r\n  delete = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  showMore = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  error = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  documentShared = new EventEmitter<DocumentModel>();\r\n\r\n  @Output()\r\n  documentDownloaded = new EventEmitter<DocumentModel>();\r\n\r\n  documentTypeEnum = DocumentTypeEnum;\r\n\r\n  constructor() {}\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n} from '@angular/core';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { DragAndDropStateService } from '../../molecules/drag-drop-slider/drag-and-drop-state.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-list',\r\n  template: `\r\n    <div\r\n      cdkDropList\r\n      (cdkDropListDropped)=\"handleDrop($event)\"\r\n      class=\"document-list\"\r\n    >\r\n      <div\r\n        *ngFor=\"let document of documentList\"\r\n        class=\"document-list-element\"\r\n        cdkDrag\r\n        [cdkDragDisabled]=\"!dragAndDropEnabled\"\r\n      >\r\n        <the-wallet-document-list-element\r\n          [value]=\"document\"\r\n          (delete)=\"delete.emit($event)\"\r\n          (showMore)=\"showMore.emit($event)\"\r\n          (error)=\"error.emit($event)\"\r\n          (documentShared)=\"documentShared.emit($event)\"\r\n          (documentDownloaded)=\"documentDownloaded.emit($event)\"\r\n        >\r\n        </the-wallet-document-list-element>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./document-list.component.scss'],\r\n})\r\nexport class DocumentListComponent implements OnDestroy {\r\n  @Input()\r\n  documentList: DocumentModel[] = [];\r\n\r\n  @Output()\r\n  sort = new EventEmitter<string[]>();\r\n\r\n  @Output()\r\n  delete = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  showMore = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  error = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  documentShared = new EventEmitter<DocumentModel>();\r\n\r\n  @Output()\r\n  documentDownloaded = new EventEmitter<DocumentModel>();\r\n\r\n  dragAndDropEnabled = false;\r\n\r\n  private dragAndDropEnabledSubscription$: Subscription;\r\n\r\n  constructor(dragAndDropState: DragAndDropStateService) {\r\n    this.dragAndDropEnabledSubscription$ =\r\n      dragAndDropState.dragAndDropEnabled$.subscribe(\r\n        (dragAndDropEnabled) => (this.dragAndDropEnabled = dragAndDropEnabled)\r\n      );\r\n  }\r\n\r\n  handleDrop(event: CdkDragDrop<DocumentModel[]>) {\r\n    let sortOrder = this.documentList.map((document) => document.id);\r\n    moveItemInArray(sortOrder, event.previousIndex, event.currentIndex);\r\n    this.sort.emit(sortOrder);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.dragAndDropEnabledSubscription$) {\r\n      this.dragAndDropEnabledSubscription$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\nimport { DocumentTypeEnum } from '../../../models/DocumentType.enum';\r\nimport { WebShareService } from '../../../modules/web-share/services/web-share.service';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-share-button',\r\n  template: `\r\n    <ng-container *ngIf=\"value\" [ngSwitch]=\"value.type\">\r\n      <the-wallet-helth-certificate-share-button\r\n        *ngSwitchCase=\"documentTypeEnum.HEALTHCERTIFICATE\"\r\n        [value]=\"value.content\"\r\n        [canShare]=\"canShare\"\r\n        (shareContentCreated)=\"onShareContentCreated($event)\"\r\n        (share)=\"onShare($event)\"\r\n      >\r\n      </the-wallet-helth-certificate-share-button>\r\n      <the-wallet-pkpass-share-button\r\n        *ngSwitchCase=\"documentTypeEnum.PKPASS\"\r\n        [value]=\"value.content\"\r\n        [canShare]=\"canShare\"\r\n        (shareContentCreated)=\"onShareContentCreated($event)\"\r\n        (share)=\"onShare($event)\"\r\n      >\r\n      </the-wallet-pkpass-share-button>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./document-share-button.component.scss'],\r\n})\r\nexport class DocumentShareButtonComponent {\r\n  @Input()\r\n  value?: DocumentModel;\r\n\r\n  @Output()\r\n  error = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  documentShared = new EventEmitter<DocumentModel>();\r\n\r\n  documentTypeEnum = DocumentTypeEnum;\r\n\r\n  canShare = false;\r\n\r\n  constructor(private webShareService: WebShareService) {}\r\n\r\n  onShareContentCreated(shareData: ShareData) {\r\n    this.canShare = this.webShareService.canShare(shareData);\r\n  }\r\n\r\n  onShare(shareData: ShareData) {\r\n    this.webShareService.share(shareData).subscribe({\r\n      error: (err) => {\r\n        this.error.emit(err);\r\n      },\r\n      next: (shareData) => {\r\n        this.documentShared.emit(this.value);\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\nimport { DocumentTypeEnum } from '../../../models/DocumentType.enum';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document',\r\n  template: `\r\n    <ng-container *ngIf=\"value\" [ngSwitch]=\"value.type\">\r\n      <the-wallet-health-certificate\r\n        *ngSwitchCase=\"documentTypeEnum.HEALTHCERTIFICATE\"\r\n        [value]=\"value.content\"\r\n      ></the-wallet-health-certificate>\r\n      <the-wallet-pkpass\r\n        *ngSwitchCase=\"documentTypeEnum.PKPASS\"\r\n        [value]=\"value.content\"\r\n      >\r\n      </the-wallet-pkpass>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./document.component.scss'],\r\n})\r\nexport class DocumentComponent {\r\n  @Input()\r\n  value?: DocumentModel;\r\n\r\n  documentTypeEnum = DocumentTypeEnum;\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { concatMap, map, tap } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DocumentStoreService } from '../../../store/document-store.service';\r\nimport { QRCodeGeneratorService } from '../../../modules/qrcode-generator/services/qrcode-generator.service';\r\nimport { UserMessageService } from '../../../modules/ui-components/services/user-message.service';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-page',\r\n  template: `\r\n    <the-wallet-page-template>\r\n      <the-wallet-app-bar\r\n        title=\"Certificate Details\"\r\n        theWalletPageTemplateHeader\r\n      >\r\n        <ng-container theWalletAppBarStartElements>\r\n          <the-wallet-icon-button (click)=\"goBack($event)\"\r\n            >arrow_back_ios\r\n          </the-wallet-icon-button>\r\n          <mat-icon>privacy_tip</mat-icon>\r\n        </ng-container>\r\n        <ng-container theWalletAppBarEndElements>\r\n          <the-wallet-icon-button (click)=\"delete($event)\">\r\n            delete_forever\r\n          </the-wallet-icon-button>\r\n          <the-wallet-document-share-button\r\n            [value]=\"document\"\r\n            (error)=\"onError($event)\"\r\n            (documentShared)=\"onDocumentShared($event)\"\r\n          ></the-wallet-document-share-button>\r\n          <the-wallet-document-download-button\r\n            [value]=\"document\"\r\n            (error)=\"onError($event)\"\r\n            (documentDownloaded)=\"onDocumentDownloaded($event)\"\r\n          >\r\n          </the-wallet-document-download-button>\r\n        </ng-container>\r\n      </the-wallet-app-bar>\r\n      <the-wallet-document\r\n        *ngIf=\"document\"\r\n        [value]=\"document\"\r\n      ></the-wallet-document>\r\n    </the-wallet-page-template>\r\n  `,\r\n  styleUrls: ['./document-page.component.scss'],\r\n})\r\nexport class DocumentPageComponent implements OnInit {\r\n  document?: DocumentModel;\r\n  id?: string;\r\n  file?: File;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private documentStore: DocumentStoreService,\r\n    private qrCodeService: QRCodeGeneratorService,\r\n    private userMessageService: UserMessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n      .pipe(\r\n        map((params) => params['id']),\r\n        tap((id) => (this.id = id)),\r\n        concatMap((id) => this.documentStore.getDocument(id)),\r\n        map((document) => {\r\n          if (!document) {\r\n            throw new DOMException('Document does not Exist');\r\n          }\r\n          return document;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (document) => (this.document = document),\r\n        error: (err) => this.userMessageService.showUserMessage(err),\r\n      });\r\n  }\r\n\r\n  goBack($event: MouseEvent) {\r\n    this.router.navigate(['wallet']);\r\n  }\r\n\r\n  delete($event: MouseEvent) {\r\n    if (this.id) {\r\n      this.documentStore.deleteDocument(this.id).subscribe({\r\n        next: () => this.router.navigate(['wallet']),\r\n        error: (err) => {\r\n          console.error(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  onError(err: any) {\r\n    this.userMessageService.showUserMessage(err);\r\n  }\r\n\r\n  onDocumentShared(document: DocumentModel) {\r\n    this.userMessageService.showUserMessage('Document shared!');\r\n  }\r\n\r\n  onDocumentDownloaded(document: DocumentModel) {\r\n    this.userMessageService.showUserMessage('Document downloaded!');\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-route-not-found-page',\r\n  template: `\r\n    <the-wallet-page-template>\r\n      <the-wallet-app-bar title=\"Wallet\" theWalletPageTemplateHeader>\r\n        <ng-container theWalletAppBarStartElements>\r\n          <mat-icon>account_balance_wallet</mat-icon>\r\n        </ng-container>\r\n      </the-wallet-app-bar>\r\n      <h1>Diese Seite existiert nicht!</h1>\r\n    </the-wallet-page-template>\r\n  `,\r\n  styleUrls: ['./route-not-found-page.component.scss'],\r\n})\r\nexport class RouteNotFoundPageComponent {\r\n  constructor() {}\r\n}\r\n","import { CertificateWrapperModel } from '../../../modules/health-certificate/CertificateWrapper.model';\r\nimport { DocumentModel } from '../../../models/Document.model';\r\nimport { DocumentTypeEnum } from '../../../models/DocumentType.enum';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { PkpassWrapperModel } from '../../../modules/pkpass/PkpassWrapper.model';\r\n\r\nexport const mapCertificateWrapperToDocumentModel = (\r\n  certificateWrapper: CertificateWrapperModel\r\n): DocumentModel => {\r\n  return {\r\n    id: uuid(),\r\n    content: certificateWrapper,\r\n    type: DocumentTypeEnum.HEALTHCERTIFICATE,\r\n  } as DocumentModel;\r\n};\r\n\r\nexport const mapPkpassWrapperToDocumentModel = (\r\n  pkpassWrapper: PkpassWrapperModel\r\n): DocumentModel => {\r\n  return {\r\n    id: uuid(),\r\n    content: pkpassWrapper,\r\n    type: DocumentTypeEnum.PKPASS,\r\n  } as DocumentModel;\r\n};\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DocumentStoreService } from '../../../store/document-store.service';\nimport { DocumentModel } from '../../../models/Document.model';\nimport { CameraService } from '../../../modules/camera-module/services/camera.service';\nimport {\n  concatMap,\n  from,\n  map,\n  skipWhile,\n  Subscription,\n  tap,\n  timeout,\n  TimeoutError,\n} from 'rxjs';\nimport { CovidCertificateService } from '../../../modules/health-certificate/services/covid-certificate.service';\nimport { SortStoreService } from '../../../store/sort-store.service';\nimport { CameraDialogService } from '../../../modules/camera-module/services/camera-dialog.service';\nimport { Router } from '@angular/router';\nimport {\n  mapCertificateWrapperToDocumentModel,\n  mapPkpassWrapperToDocumentModel,\n} from './map-to-document-model.utils';\nimport { ActionMenuSheetService } from '../../../modules/ui-components/services/action-menu-sheet.service';\nimport { ActionListItemModel } from '../../../modules/ui-components/ActionListItem.model';\nimport { UserMessageService } from '../../../modules/ui-components/services/user-message.service';\nimport { QrcodeReaderService } from '../../../modules/camera-module/services/qrcode-reader.service';\nimport { blobToImageData } from '../../../modules/commons/utils/image-conversion.utils';\nimport { OverlayService } from '../../../modules/ui-components/services/overlay.service';\nimport { FileSystemService } from '../../../modules/file-system/services/FileSystem.service';\nimport { PkpassService } from '../../../modules/pkpass/services/pkpass.service';\nimport { FilePickerAcceptTypesConstants } from '../../../modules/file-system/utils/FilePickerAcceptTypes.constants';\n\n@Component({\n  selector: 'the-wallet-wallet-page',\n  template: `\n    <the-wallet-page-template>\n      <the-wallet-app-bar title=\"Wallet\" theWalletPageTemplateHeader>\n        <ng-container theWalletAppBarStartElements>\n          <mat-icon>wallet</mat-icon>\n        </ng-container>\n        <ng-container theWalletAppBarEndElements>\n          <the-wallet-install-pwabutton\n            class=\"wallet-page-install-pwa-button\"\n          ></the-wallet-install-pwabutton>\n          <the-wallet-drag-drop-slider></the-wallet-drag-drop-slider>\n        </ng-container>\n      </the-wallet-app-bar>\n      <the-wallet-document-list\n        [documentList]=\"documentList | sortDocumentsByArray: sortOrder\"\n        (sort)=\"onSort($event)\"\n        (delete)=\"onDelete($event)\"\n        (showMore)=\"onShowMore($event)\"\n        (documentShared)=\"onDocumentShared($event)\"\n        (error)=\"onError($event)\"\n        (documentDownloaded)=\"onDocumentDownloaded($event)\"\n      ></the-wallet-document-list>\n    </the-wallet-page-template>\n    <button\n      (click)=\"openActionMenu()\"\n      mat-fab\n      color=\"primary\"\n      aria-label=\"QR_Code\"\n    >\n      <mat-icon>add</mat-icon>\n    </button>\n  `,\n  styleUrls: ['./wallet-page.component.scss'],\n})\nexport class WalletPageComponent implements OnInit, OnDestroy {\n  documentList: DocumentModel[] = [];\n  sortOrder: string[] = [];\n  documentChangeSubscription?: Subscription;\n  sortOrderSubscription?: Subscription;\n\n  actionList: ActionListItemModel[] = [\n    {\n      matIcon: 'qr_code_scanner',\n      name: 'Scan Health Certificate',\n      action: () => {\n        this.openCameraDialog();\n      },\n    },\n    {\n      matIcon: 'file_upload',\n      name: 'Import Health Certificate',\n      action: () => {\n        this.importImage();\n      },\n    },\n    {\n      matIcon: 'airplane_ticket',\n      name: 'Import PKPass',\n      action: () => {\n        this.importPKPass();\n      },\n    },\n  ];\n\n  constructor(\n    private documentStore: DocumentStoreService,\n    private cameraService: CameraService,\n    private certificateService: CovidCertificateService,\n    private sortService: SortStoreService,\n    private cameraDialogService: CameraDialogService,\n    private router: Router,\n    private actionMenuSheetService: ActionMenuSheetService,\n    private fileSystemService: FileSystemService,\n    private userMessageService: UserMessageService,\n    private qrcodeReaderService: QrcodeReaderService,\n    private overlayService: OverlayService,\n    private pkpassService: PkpassService\n  ) {}\n\n  ngOnInit(): void {\n    this.documentStore.getDocuments().subscribe({\n      //Reassign Array so Angular will detect a change and redraw UI\n      next: (value) => (this.documentList = [...this.documentList, value]),\n      error: (err) => this.userMessageService.showUserMessage(err),\n    });\n    //Subscribe for changed Documents\n    this.documentChangeSubscription =\n      this.documentStore.documentChange$.subscribe((documentModelChange) => {\n        console.log(documentModelChange);\n        const index = this.documentList.findIndex(\n          (document) => document.id === documentModelChange.id\n        );\n        //Must be an Update\n        if (index != -1 && documentModelChange.document) {\n          this.documentList[index] = documentModelChange.document;\n          //Must be a Deletion\n        } else if (index != -1) {\n          this.documentList.splice(index, 1);\n          //Must be a new Document\n        } else if (documentModelChange.document) {\n          this.documentList.push(documentModelChange.document);\n        }\n        //trigger redraw\n        this.documentList = [...this.documentList];\n      });\n    this.sortService.getSortOrder().subscribe((sortOrder) => {\n      this.sortOrder = sortOrder;\n    });\n    this.sortOrderSubscription = this.sortService.sortOrder$.subscribe(\n      (sortOrder) => {\n        this.sortOrder = sortOrder;\n      }\n    );\n  }\n\n  openActionMenu() {\n    this.actionMenuSheetService.open(this.actionList);\n  }\n\n  onSort(sort: string[]) {\n    this.sortService.updateSortOrder(sort).subscribe();\n  }\n\n  onDelete(id: string) {\n    if (id) {\n      this.documentStore.deleteDocument(id).subscribe({\n        error: (err) => this.userMessageService.showUserMessage(err),\n      });\n    }\n  }\n\n  onShowMore(id: string) {\n    if (id) {\n      this.router.navigate(['document', id]);\n    }\n  }\n\n  onDocumentShared(document: DocumentModel) {\n    this.userMessageService.showUserMessage('Document shared!');\n  }\n\n  onDocumentDownloaded(document: DocumentModel) {\n    this.userMessageService.showUserMessage('Document downloaded!');\n  }\n\n  onError(error: any) {\n    this.userMessageService.showUserMessage(error);\n  }\n\n  handleError(exception: any) {\n    this.overlayService.close();\n    if (!(exception instanceof TimeoutError)) {\n      console.error(exception);\n      this.userMessageService.showUserMessage(exception);\n    } else {\n      console.log('intended Timeout of Observable.');\n    }\n  }\n\n  openCameraDialog() {\n    this.actionMenuSheetService.close();\n    this.cameraDialogService\n      .openQRCodeScannerDialog()\n      .afterClosed()\n      .pipe(\n        skipWhile((qrCode) => !qrCode),\n        // @ts-ignore\n        concatMap((qrCode) => this.certificateService.decode(qrCode.value)),\n        map((certificateWrapper) =>\n          mapCertificateWrapperToDocumentModel(certificateWrapper)\n        ),\n        concatMap((document) => this.documentStore.saveDocument(document))\n      )\n      .subscribe({\n        error: (err) => this.handleError(err),\n        complete: () => console.log('closed'),\n      });\n  }\n\n  importImage() {\n    this.actionMenuSheetService.close();\n    this.fileSystemService\n      .readFiles([FilePickerAcceptTypesConstants.IMAGES], false)\n      .pipe(\n        //Cleanup Observable when there is no File selected in 100 seconds\n        timeout(100000),\n        tap(() => this.overlayService.openSpinnerOverlay()),\n        concatMap((image) => blobToImageData(image[0])),\n        concatMap((imageData) =>\n          from(this.qrcodeReaderService.detectImage(imageData))\n        ),\n        map((qrCode) => {\n          if (!qrCode || qrCode.length < 1) {\n            throw new DOMException('No Valid QR-Code!');\n          }\n          return qrCode;\n        }),\n        // @ts-ignore\n        concatMap((qrCode) => this.certificateService.decode(qrCode[0].value)),\n        map((certificateWrapper) =>\n          mapCertificateWrapperToDocumentModel(certificateWrapper)\n        ),\n        concatMap((document) => this.documentStore.saveDocument(document)),\n        tap(() => {\n          this.overlayService.close();\n        })\n      )\n      .subscribe({\n        next: (value) => console.log(value),\n        error: (err) => this.handleError(err),\n      });\n  }\n\n  private importPKPass() {\n    this.actionMenuSheetService.close();\n    this.fileSystemService\n      .readFiles([FilePickerAcceptTypesConstants.PKPASS], false)\n      .pipe(\n        //Cleanup Observable when there is no File selected in 100 seconds\n        timeout(100000),\n        tap(() => this.overlayService.openSpinnerOverlay()),\n        concatMap((files) => this.pkpassService.readPkpass(files[0])),\n        map((pkpassWrapper) => mapPkpassWrapperToDocumentModel(pkpassWrapper)),\n        concatMap((pkpassDocument) =>\n          this.documentStore.saveDocument(pkpassDocument)\n        ),\n        tap((documet) => {\n          console.log(documet);\n        }),\n        tap(() => {\n          this.overlayService.close();\n        })\n      )\n      .subscribe({\n        next: (pkpassDocument) => console.log(pkpassDocument),\n        error: (err) => this.handleError(err),\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.documentChangeSubscription) {\n      this.documentChangeSubscription.unsubscribe();\n    }\n    if (this.sortOrderSubscription) {\n      this.sortOrderSubscription.unsubscribe();\n    }\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[theWalletPageTemplateHeader]',\n})\nexport class PageTemplateHeaderDirective {\n  constructor() {}\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'the-wallet-page-template',\r\n  template: `\r\n    <ng-content select=\"[theWalletPageTemplateHeader]\"></ng-content>\r\n    <div class=\"container\">\r\n      <main [class]=\"isLargeScreen ? 'main-large' : 'main'\">\r\n        <ng-content></ng-content>\r\n      </main>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./page-template.component.scss'],\r\n})\r\nexport class PageTemplateComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  title: string = '';\r\n\r\n  private beakpointSubscription$?: Subscription;\r\n  isLargeScreen = false;\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n  ngOnInit(): void {\r\n    this.beakpointSubscription$ = this.breakpointObserver\r\n      .observe([Breakpoints.XSmall])\r\n      .subscribe((result) => {\r\n        console.log(result);\r\n        this.isLargeScreen = !result.matches;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.beakpointSubscription$) {\r\n      this.beakpointSubscription$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","export enum DocumentTypeEnum {\r\n  HEALTHCERTIFICATE = 'HEALTHCERTIFICATE',\r\n  PKPASS = 'PKPASS',\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CameraService } from '../services/camera.service';\nimport { CameraTypeEnum } from '../services/CameraTypeEnum';\n\n@Component({\n  selector: 'the-wallet-camera-control-strip',\n  template: `\n    <mat-toolbar class=\"the-wallet-camera-control-strip\">\n      <mat-toolbar-row class=\"the-wallet-camera-control-strip-row\">\n        <button\n          [disabled]=\"!supportsFlash\"\n          mat-mini-fab\n          aria-label=\"Light!\"\n          color=\"primary\"\n        >\n          <mat-icon>flashlight_on</mat-icon>\n        </button>\n        <button\n          [disabled]=\"cameraType !== cameraTypeEnum.DEFAULT\"\n          (click)=\"takePhoto()\"\n          mat-fab\n          aria-label=\"Photo!\"\n          color=\"primary\"\n        >\n          <mat-icon>photo_camera</mat-icon>\n        </button>\n        <button\n          (click)=\"switchCamera()\"\n          mat-mini-fab\n          aria-label=\"Switch Camera!\"\n          color=\"primary\"\n        >\n          <mat-icon>switch_camera</mat-icon>\n        </button>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  `,\n  styleUrls: ['./camera-control-strip.component.scss'],\n})\nexport class CameraControlStripComponent implements OnInit {\n  @Input()\n  cameraType? = CameraTypeEnum.DEFAULT;\n\n  cameraTypeEnum = CameraTypeEnum;\n\n  supportsFlash = false;\n\n  constructor(private cameraService: CameraService) {}\n\n  ngOnInit(): void {\n    this.supportsFlash = this.cameraService.supportsFlashlight();\n  }\n\n  switchCamera() {\n    this.cameraService.switchCamera();\n  }\n\n  takePhoto() {\n    this.cameraService.takePicture();\n  }\n}\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CameraDialogOptionsModel } from '../services/CameraDialogOptions.model';\r\nimport { CameraTypeEnum } from '../services/CameraTypeEnum';\r\n\r\n@Component({\r\n  selector: 'the-wallet-camera-dialog',\r\n  template: `\r\n    <mat-toolbar class=\"camera-dialog-component-title\" color=\"primary\">\r\n      <mat-toolbar-row class=\"camera-dialog-component-title-row\">\r\n        <h1 mat-dialog-title>Camera</h1>\r\n        <button class=\"close-button\" mat-dialog-close>\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n    <mat-dialog-content class=\"camera-dialog-content\">\r\n      <the-wallet-camera-video\r\n        class=\"camera-dialog-camera-video\"\r\n        [scanForQRCode]=\"data.cameraType === cameraTypeEnum.QRCODE\"\r\n      >\r\n      </the-wallet-camera-video>\r\n    </mat-dialog-content>\r\n    <the-wallet-camera-control-strip\r\n      [cameraType]=\"data.cameraType\"\r\n    ></the-wallet-camera-control-strip>\r\n  `,\r\n  styleUrls: ['./camera-dialog.component.scss'],\r\n})\r\nexport class CameraDialogComponent {\r\n  cameraTypeEnum = CameraTypeEnum;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: CameraDialogOptionsModel) {\r\n    console.log(data);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { CameraService } from '../services/camera.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'the-wallet-camera-video',\r\n  template: `\r\n    <div class=\"video-component\">\r\n      <video playsinline autoplay [srcObject]=\"mediaStream\"></video>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./camera-video.component.scss'],\r\n})\r\nexport class CameraVideoComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  @Input()\r\n  scanForQRCode? = false;\r\n\r\n  //not allowed private, so Template can read value\r\n  mediaStream?: MediaStream;\r\n  private mediaStreamSubscription?: Subscription;\r\n\r\n  constructor(private cameraService: CameraService) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.mediaStreamSubscription?.unsubscribe();\r\n    this.cameraService.stop();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.cameraService.supportsCameraApi()) {\r\n      this.mediaStreamSubscription = this.cameraService.mediaStream$.subscribe({\r\n        next: (mediaStream) => {\r\n          this.mediaStream = mediaStream;\r\n        },\r\n        error: (error) => console.log(error),\r\n      });\r\n    }\r\n  }\r\n\r\n  //Start streaming after Video-Element is ready\r\n  ngAfterViewInit(): void {\r\n    this.cameraService.start(undefined, this.scanForQRCode);\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CameraControlStripComponent } from './camera-control-strip/camera-control-strip.component';\nimport { CameraVideoComponent } from './camera-video/camera-video.component';\nimport { CameraDialogComponent } from './camera-dialog/camera-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FeatureDetectionService } from './services/feature-detection.service';\nimport { featureDetectionServiceFactory } from './services/feature-detection.service.factory';\nimport { qrcodeReaderServiceProvider } from './services/qrcode-reader.service.provider';\n\n@NgModule({\n  declarations: [\n    CameraVideoComponent,\n    CameraControlStripComponent,\n    CameraDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: featureDetectionServiceFactory,\n      deps: [FeatureDetectionService],\n      multi: true,\n    },\n    qrcodeReaderServiceProvider,\n  ],\n  exports: [CameraDialogComponent],\n})\nexport class CameraModule {}\n","/*\r\n * This is a Polyfill for the ImageCapture-Api\r\n * Have a Look at https://www.w3.org/TR/image-capture/\r\n * Also i seem not the first person to try, to implement a Poly-Fill fot the Image-Capture-Api:\r\n * https://github.com/GoogleChromeLabs/imagecapture-polyfill/blob/master/src/imagecapture.js\r\n * */\r\nexport class ImageCaptureApi implements ImageCapture {\r\n  static readonly READY_STATE_LIVE = 'live';\r\n  static readonly MEDIA_STREAM_TRACK_KIND_VIDEO = 'video';\r\n\r\n  readonly track: MediaStreamTrack;\r\n  private readonly _videoElement: HTMLVideoElement;\r\n  private readonly _canvasElement: HTMLCanvasElement;\r\n  private readonly _context: CanvasRenderingContext2D;\r\n  private readonly _isPlayingPromise: Promise<void>;\r\n\r\n  constructor(track: MediaStreamTrack) {\r\n    if (!track) {\r\n      throw new DOMException(\r\n        'MediaStreamTrack is null or undefined!',\r\n        'DataError'\r\n      );\r\n    }\r\n    if (track.kind !== ImageCaptureApi.MEDIA_STREAM_TRACK_KIND_VIDEO) {\r\n      throw new DOMException(\r\n        'MediaStreamTrack must be of the kind video!',\r\n        'NotSupportedError'\r\n      );\r\n    }\r\n\r\n    this.track = track;\r\n    this._videoElement = document.createElement('video');\r\n    //Fix for iOS 10\r\n    //see: https://stackoverflow.com/questions/19521667/disable-fullscreen-iphone-video\r\n    this._videoElement.playsInline = true;\r\n    this._canvasElement = document.createElement('canvas');\r\n    // @ts-ignore\r\n    this._context = this._canvasElement.getContext('2d');\r\n    const mediaStream = new MediaStream([this.track]);\r\n    this._videoElement.srcObject = mediaStream;\r\n    this._isPlayingPromise = this._videoElement.play();\r\n  }\r\n\r\n  getPhotoCapabilities(): Promise<PhotoCapabilities> {\r\n    console.warn(\r\n      'the getPhotoCapabilities is not implemented and returns only default values!'\r\n    );\r\n    const photoCapabilities: PhotoCapabilities = {\r\n      redEyeReduction: 'never',\r\n      fillLightMode: ['off'],\r\n      imageHeight: { max: 0, min: 0, step: 0 },\r\n      imageWidth: { max: 0, min: 0, step: 0 },\r\n    };\r\n    return Promise.resolve(photoCapabilities);\r\n  }\r\n\r\n  getPhotoSettings(): Promise<PhotoSettings> {\r\n    console.warn(\r\n      'the getPhotoSettings is not implemented and returns only default values!'\r\n    );\r\n    const photoCapabilities: PhotoSettings = {\r\n      redEyeReduction: undefined,\r\n      fillLightMode: undefined,\r\n      imageHeight: undefined,\r\n      imageWidth: undefined,\r\n    };\r\n    return Promise.resolve(photoCapabilities);\r\n  }\r\n\r\n  async grabFrame(): Promise<ImageBitmap> {\r\n    const { context } = await this.drawImageToCanvas();\r\n    const imageData = context.getImageData(\r\n      0,\r\n      0,\r\n      this._videoElement.width,\r\n      this._videoElement.height\r\n    );\r\n    const imageBitMap = await createImageBitmap(imageData);\r\n    return imageBitMap;\r\n  }\r\n\r\n  async drawImageToCanvas(): Promise<{\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n  }> {\r\n    // IE does not support readyState: https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/readyState\r\n    if (\r\n      !this.track.readyState ||\r\n      this.track.readyState === ImageCaptureApi.READY_STATE_LIVE\r\n    ) {\r\n      return this._isPlayingPromise.then(() => {\r\n        const width = this._videoElement.videoWidth;\r\n        const height = this._videoElement.videoHeight;\r\n        this._canvasElement.width = width;\r\n        this._canvasElement.height = height;\r\n        if (!this._context) {\r\n          throw new DOMException('No 2d-Context from Canvas replied!');\r\n        }\r\n        this._context.drawImage(this._videoElement, 0, 0);\r\n        return { canvas: this._canvasElement, context: this._context };\r\n      });\r\n    } else {\r\n      throw new DOMException('VideoStream not active!', 'InvalidStateError');\r\n    }\r\n  }\r\n\r\n  //take a look at https://w3c.github.io/mediacapture-image/#dom-imagecapture-grabframe\r\n  async takePhoto(photoSettings?: PhotoSettings): Promise<Blob> {\r\n    if (photoSettings) {\r\n      console.log('PhotoSettings are not supported in Polyfill!');\r\n    }\r\n    const { canvas } = await this.drawImageToCanvas();\r\n    return new Promise<Blob>((resolve, reject) => {\r\n      canvas.toBlob((blob) => {\r\n        blob\r\n          ? resolve(blob)\r\n          : reject(new DOMException('Could not generate Blob!'));\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nif (!('ImageCapture' in window)) {\r\n  window.ImageCapture = ImageCaptureApi;\r\n}\r\n","export enum CameraTypeEnum {\r\n  DEFAULT = \"DEFAULT\",\r\n  QRCODE = \"QRCODE\",\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { CameraDialogComponent } from '../camera-dialog/camera-dialog.component';\nimport { CameraService } from './camera.service';\nimport { take } from 'rxjs';\nimport { QRCodeModel } from './QRCode.model';\nimport { CameraDialogOptionsModel } from './CameraDialogOptions.model';\nimport { CameraTypeEnum } from './CameraTypeEnum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CameraDialogService {\n  constructor(\n    private matDialog: MatDialog,\n    private cameraService: CameraService\n  ) {}\n\n  openCameraDialog(): MatDialogRef<CameraDialogComponent> {\n    //have a look at: https://stackoverflow.com/questions/48688614/angular-custom-style-to-mat-dialog\n    //style is in style.css\n    return this.matDialog.open<\n      CameraDialogComponent,\n      CameraDialogOptionsModel,\n      any\n    >(CameraDialogComponent, {\n      panelClass: 'camera-dialog',\n      data: { cameraType: CameraTypeEnum.DEFAULT },\n    });\n  }\n\n  openQRCodeScannerDialog(): MatDialogRef<\n    CameraDialogComponent,\n    QRCodeModel | undefined\n  > {\n    //have a look at: https://stackoverflow.com/questions/48688614/angular-custom-style-to-mat-dialog\n    //style is in style.css\n    const dialog = this.matDialog.open<\n      CameraDialogComponent,\n      CameraDialogOptionsModel,\n      QRCodeModel | undefined\n    >(CameraDialogComponent, {\n      panelClass: 'camera-dialog',\n      data: { cameraType: CameraTypeEnum.QRCODE },\n    });\n    const qrCodeSubscription$ = this.cameraService.qrCode$\n      .pipe(take(1))\n      .subscribe({\n        next: (qrCode) => dialog.close(qrCode),\n        error: (err) => dialog.close(),\n      });\n    //unsubscribe when Dialog is closed\n    dialog.afterClosed().subscribe(() => qrCodeSubscription$.unsubscribe());\n    return dialog;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { QrcodeReaderService } from './qrcode-reader.service';\r\nimport { QRCodeModel } from './QRCode.model';\r\nimport { ImageCaptureUtils } from './image-capture.utils';\r\nimport { FeatureDetectionService } from './feature-detection.service';\r\nimport { ImageCaptureApi } from '../polyfills/image-capture-api.polyfill';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CameraService {\r\n  static readonly MEDIA_DEVICE_KIND_VIDEOINPUT = 'videoinput';\r\n\r\n  private mediaStreamSource = new Subject<MediaStream>();\r\n  private pictureSource = new Subject<Blob>();\r\n  private qrCodeSource = new Subject<QRCodeModel>();\r\n\r\n  mediaStream$: Observable<MediaStream> = this.mediaStreamSource.asObservable();\r\n  picture$: Observable<Blob> = this.pictureSource.asObservable();\r\n  qrCode$: Observable<QRCodeModel> = this.qrCodeSource.asObservable();\r\n\r\n  private mediaStream?: MediaStream;\r\n\r\n  private imageCaptureApi?: ImageCaptureApi;\r\n\r\n  private DEFAULT_CONSTRAINTS: MediaStreamConstraints = {\r\n    video: {\r\n      facingMode: 'environment',\r\n    },\r\n    audio: false,\r\n  };\r\n\r\n  constructor(\r\n    private qrcodeReaderService: QrcodeReaderService,\r\n    private featureDetectionService: FeatureDetectionService\r\n  ) {\r\n    console.log(qrcodeReaderService.getImplementation());\r\n  }\r\n\r\n  supportsCameraApi(): boolean {\r\n    return this.featureDetectionService.getUserMedia();\r\n  }\r\n\r\n  supportsEnumerateDevicesApi() {\r\n    return this.featureDetectionService.enumerateDevices();\r\n  }\r\n\r\n  supportsTakingPictures() {\r\n    return (\r\n      this.featureDetectionService.canvas() ||\r\n      this.featureDetectionService.imageCapture()\r\n    );\r\n  }\r\n\r\n  supportsFlashlight() {\r\n    return (\r\n      this.featureDetectionService.getSupportedConstraints() &&\r\n      navigator.mediaDevices.getSupportedConstraints().torch\r\n    );\r\n  }\r\n\r\n  switchCamera() {\r\n    this.getAvailableVideoDevices().then(\r\n      (mediaDeviceInfos: MediaDeviceInfo[]) => {\r\n        if (mediaDeviceInfos.length > 0) {\r\n          this.start({ video: { deviceId: mediaDeviceInfos[0].deviceId } });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private async getAvailableVideoDevices(): Promise<MediaDeviceInfo[]> {\r\n    if (!this.supportsCameraApi() && !this.supportsEnumerateDevicesApi()) {\r\n      throw new DOMException('Feature Enumarate Devices is not supported!');\r\n    }\r\n    const currentDeviceId = this.mediaStream?.active\r\n      ? this.mediaStream.getTracks()[0].id\r\n      : null;\r\n    const mediaDevices: MediaDeviceInfo[] =\r\n      await navigator.mediaDevices.enumerateDevices();\r\n    const otherVideoDevices = mediaDevices.filter(\r\n      (mediaDeviceInfo) =>\r\n        mediaDeviceInfo.kind === CameraService.MEDIA_DEVICE_KIND_VIDEOINPUT &&\r\n        mediaDeviceInfo.deviceId !== currentDeviceId\r\n    );\r\n    return otherVideoDevices;\r\n  }\r\n\r\n  stop() {\r\n    this.imageCaptureApi = undefined;\r\n    if (this.mediaStream?.active) {\r\n      const tracks = this.mediaStream.getTracks();\r\n      tracks.forEach((track) => {\r\n        track.stop();\r\n      });\r\n    }\r\n    this.mediaStream = undefined;\r\n  }\r\n\r\n  scanStreamForQrCodes() {\r\n    window.requestAnimationFrame(async () => {\r\n      if (this.mediaStream && this.mediaStream?.active) {\r\n        try {\r\n          if (!this.imageCaptureApi) {\r\n            this.imageCaptureApi = new ImageCaptureApi(\r\n              this.mediaStream.getVideoTracks()[0]\r\n            );\r\n          }\r\n          const { canvas, context } =\r\n            await this.imageCaptureApi.drawImageToCanvas();\r\n          const imageData = context.getImageData(\r\n            0,\r\n            0,\r\n            canvas.width,\r\n            canvas.height\r\n          );\r\n          const qrCode = await this.qrcodeReaderService.detectImage(imageData);\r\n          if (qrCode && qrCode.length > 0) {\r\n            this.qrCodeSource.next(qrCode[0]);\r\n          }\r\n        } catch (exception) {\r\n          console.error(exception);\r\n        }\r\n        this.scanStreamForQrCodes();\r\n      }\r\n    });\r\n  }\r\n\r\n  /*startScanningForQRCodes(){\r\n    this.imageCaptureApi = undefined;\r\n    this.scanStreamForQrCodes();\r\n  }*/\r\n\r\n  takePicture(photoSettings?: PhotoSettings) {\r\n    if (this.mediaStream?.active) {\r\n      ImageCaptureUtils.takePictureOfStream(this.mediaStream, photoSettings)\r\n        .then((blob) => {\r\n          this.pictureSource.next(blob);\r\n        })\r\n        .catch((reason: DOMException) => {\r\n          this.pictureSource.error(reason);\r\n        });\r\n    }\r\n  }\r\n\r\n  start(constraints?: MediaStreamConstraints, scanForQRCodes = true) {\r\n    const mediaDevicePromise = navigator.mediaDevices.getUserMedia(\r\n      constraints ? constraints : this.DEFAULT_CONSTRAINTS\r\n    );\r\n    mediaDevicePromise\r\n      .then((mediaStream: MediaStream) => {\r\n        this.mediaStream = mediaStream;\r\n        this.mediaStreamSource.next(mediaStream);\r\n        if (scanForQRCodes) {\r\n          this.scanStreamForQrCodes();\r\n        }\r\n      })\r\n      .catch((reason: DOMException) => {\r\n        this.mediaStreamSource.error(reason);\r\n      });\r\n  }\r\n}\r\n","import { FeatureDetectionService } from './feature-detection.service';\n\nexport const featureDetectionServiceFactory = (\n  featureDetectionService: FeatureDetectionService\n) => {\n  return () => featureDetectionService.init();\n};\n","import { Injectable } from '@angular/core';\nimport { NativeQrcodeReaderService } from './native-qrcode-reader.service';\n\n/*\n * Service dient der Feature-Detection\n * Die Api orientiert sich an der Modernizer-Api\n * Da bestimmte Features nur Asynchron geprüft werden können (Bsp. BarCode-Api für QR-Codes), aber nicht zu jeder Zeit\n * asynchrone Methoden genutzt werden können (bsp. in einer Factory-Methode Dependecy-Provider) finden diese Prüfungen\n * initial beim Start des Camera-Moduls statt. Hier ist es möglich auch Asynchrone Funktionen zu nutzen. Damit die\n * entsprechende Methode beim Modul-Start gerufen wird, wird der APP_INITIALIZER-Token genutzt.\n * */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureDetectionService {\n  private _qrCodeReader: boolean = false;\n  private _isInit: boolean = false;\n\n  constructor() {}\n\n  async init() {\n    try {\n      await this.detectQRCodeReader();\n    } catch (e) {\n      console.error('Error during Feature-Detection', e);\n    } finally {\n      this._isInit = true;\n    }\n  }\n\n  get isInit() {\n    return this._isInit;\n  }\n\n  private async detectQRCodeReader() {\n    this._qrCodeReader =\n      await NativeQrcodeReaderService.supportsNativeQRCodeApi();\n    return this._qrCodeReader;\n  }\n\n  get qrCodeReader() {\n    if (!this.isInit) {\n      throw new DOMException('Please call init()-Function first!');\n    }\n    return this._qrCodeReader;\n  }\n\n  mediaDevices() {\n    return 'mediaDevices' in navigator;\n  }\n\n  getUserMedia() {\n    return this.mediaDevices() && 'getUserMedia' in navigator.mediaDevices;\n  }\n\n  enumerateDevices() {\n    return this.mediaDevices() && 'enumerateDevices' in navigator.mediaDevices;\n  }\n\n  getSupportedConstraints() {\n    return (\n      this.mediaDevices() && 'getSupportedConstraints' in navigator.mediaDevices\n    );\n  }\n\n  canvas() {\n    return !!(\n      document.createElement('canvas').getContext &&\n      document.createElement('canvas').getContext('2d') &&\n      document.createElement('canvas').toBlob\n    );\n  }\n\n  imageCapture() {\n    return 'ImageCapture' in window;\n  }\n}\n","export class ImageCaptureUtils {\r\n  static async takePictureOfStream(\r\n    mediaStream: MediaStream,\r\n    photoSettings?: PhotoSettings\r\n  ): Promise<Blob> {\r\n    if (mediaStream.active) {\r\n      const mediaStreamTracks = mediaStream.getTracks();\r\n      const imageCapture = new ImageCapture(mediaStreamTracks[0]);\r\n      const picture = await imageCapture.takePhoto(photoSettings);\r\n      return picture;\r\n    } else {\r\n      throw new DOMException('MediaStream not active!');\r\n    }\r\n  }\r\n}\r\n","import jsQR from 'jsqr';\nimport { QrcodeReaderService } from './qrcode-reader.service';\nimport { QRCodeModel } from './QRCode.model';\n\nexport class JsQrcodeReaderService implements QrcodeReaderService {\n  constructor() {}\n\n  async detectImage(imageData: ImageData): Promise<QRCodeModel[]> {\n    let qrCodeModel: QRCodeModel | undefined;\n    const code = jsQR(imageData.data, imageData.width, imageData.height);\n    //Avoid \"False Positives\" of QR-Codes (Sometimes the library recognize not exisiting QR-Codes\n    //see: https://github.com/cozmo/jsQR/issues/90\n    if (code && code.binaryData.length > 0) {\n      qrCodeModel = {\n        value: code.data,\n      };\n    }\n    return qrCodeModel ? [qrCodeModel] : [];\n  }\n\n  getImplementation(): string {\n    return 'JAVASCRIPT';\n  }\n}\n","import { QrcodeReaderService } from './qrcode-reader.service';\nimport { QRCodeModel } from './QRCode.model';\n\nexport class NativeQrcodeReaderService implements QrcodeReaderService {\n  static readonly BARCODE_FORMAT_QR_CODE = 'qr_code';\n  private qrBarcodeDetector: BarcodeDetector | undefined;\n\n  constructor() {}\n\n  private async initializeBarcodeDetector(\n    barcodeFormat: BarcodeFormat[]\n  ): Promise<BarcodeDetector> {\n    const barcodeFormatIsSupported =\n      await NativeQrcodeReaderService.detectSupportedBarCodeFormat(\n        barcodeFormat\n      );\n    if (barcodeFormatIsSupported) {\n      return new BarcodeDetector({ formats: barcodeFormat });\n    }\n    throw new DOMException('Barcode API or Format is not supported!');\n  }\n\n  private async initializeQRCodeReader(): Promise<BarcodeDetector> {\n    this.qrBarcodeDetector = await this.initializeBarcodeDetector([\n      NativeQrcodeReaderService.BARCODE_FORMAT_QR_CODE,\n    ]);\n    return this.qrBarcodeDetector;\n  }\n\n  private static async detectSupportedBarCodeFormat(\n    barcodeFormats: BarcodeFormat[]\n  ): Promise<boolean> {\n    return (\n      'BarcodeDetector' in window &&\n      BarcodeDetector.getSupportedFormats &&\n      barcodeFormats.every(async (format) =>\n        (await BarcodeDetector.getSupportedFormats()).includes(format)\n      )\n    );\n  }\n\n  static async supportsNativeQRCodeApi(): Promise<boolean> {\n    return await this.detectSupportedBarCodeFormat([\n      NativeQrcodeReaderService.BARCODE_FORMAT_QR_CODE,\n    ]);\n  }\n\n  async detectImage(imageData: ImageData): Promise<QRCodeModel[]> {\n    if (!(await NativeQrcodeReaderService.supportsNativeQRCodeApi())) {\n      throw new DOMException(\n        \"Your devices doesn't supports the native QR-Code-Scanner-Api!\"\n      );\n    }\n    const qrCodeDetector = this.qrBarcodeDetector\n      ? this.qrBarcodeDetector\n      : await this.initializeQRCodeReader();\n    const codes = await qrCodeDetector.detect(imageData);\n    const qrCodeModel: QRCodeModel[] = codes.map((code) => {\n      return {\n        value: code.rawValue,\n      } as QRCodeModel;\n    });\n    return qrCodeModel;\n  }\n\n  getImplementation(): string {\n    return 'NATIVE';\n  }\n}\n","import { QrcodeReaderService } from './qrcode-reader.service';\nimport { NativeQrcodeReaderService } from './native-qrcode-reader.service';\nimport { JsQrcodeReaderService } from './js-qrcode-reader.service';\nimport { FeatureDetectionService } from './feature-detection.service';\n\nconst qrcodeReaderServiceFactory = (\n  featureDetectionStartupService: FeatureDetectionService\n) => {\n  return featureDetectionStartupService.qrCodeReader\n    ? new NativeQrcodeReaderService()\n    : new JsQrcodeReaderService();\n};\n\nexport const qrcodeReaderServiceProvider = {\n  provide: QrcodeReaderService,\n  useFactory: qrcodeReaderServiceFactory,\n  deps: [FeatureDetectionService],\n};\n","import { QRCodeModel } from './QRCode.model';\n\nexport abstract class QrcodeReaderService {\n  abstract detectImage(imageData: ImageData): Promise<QRCodeModel[]>;\n  abstract getImplementation(): string;\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShortenPipe } from './pipes/shorten.pipe';\nimport { InstallPWAButtonComponent } from './components/install-pwabutton/install-pwabutton.component';\nimport { UiComponentsModule } from '../ui-components/ui-components.module';\nimport { installPromptServiceProvider } from './services/install-prompt.service.provider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [ShortenPipe, InstallPWAButtonComponent],\n  imports: [CommonModule, UiComponentsModule, MatIconModule, MatButtonModule],\n  providers: [installPromptServiceProvider],\n  exports: [ShortenPipe, InstallPWAButtonComponent],\n})\nexport class CommonsModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { InstallPromptService } from '../../services/install-prompt.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'the-wallet-install-pwabutton',\n  template: `\n    <button\n      class=\"install-pwabutton\"\n      color=\"accent\"\n      *ngIf=\"installPromptEvent\"\n      (click)=\"installPWA()\"\n      mat-button\n    >\n      <mat-icon>install_mobile</mat-icon>Install App\n    </button>\n  `,\n  styleUrls: ['./install-pwabutton.component.scss'],\n})\nexport class InstallPWAButtonComponent implements OnInit, OnDestroy {\n  installPromptEvent?: Event;\n  private installPromptEventSubscription?: Subscription;\n\n  constructor(private installPromptService: InstallPromptService) {}\n\n  ngOnDestroy(): void {\n    if (this.installPromptEventSubscription) {\n      this.installPromptEventSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.installPromptEventSubscription =\n      this.installPromptService.installPromptEvent$.subscribe((event) => {\n        this.installPromptEvent = event;\n      });\n  }\n\n  installPWA() {\n    if (this.installPromptEvent && 'prompt' in this.installPromptEvent) {\n      //@ts-ignore\n      this.installPromptEvent.prompt();\n      //@ts-ignore\n      this.installPromptEvent.userChoice.then(({ outcome }) => {\n        console.log('AppInstallationState: ' + outcome);\n        this.installPromptService.reset();\n      });\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'shorten',\r\n})\r\nexport class ShortenPipe implements PipeTransform {\r\n  transform(\r\n    value: string | undefined | number,\r\n    maxLength: number\r\n  ): string | undefined {\r\n    if (typeof value === 'number') {\r\n      value = value + '';\r\n    }\r\n    return value && value.length > maxLength\r\n      ? value.substring(0, maxLength) + '...'\r\n      : value;\r\n  }\r\n}\r\n","import { InstallPromptService } from './install-prompt.service';\n\nexport const installPromptServiceFactory = (\n  installPromptService: InstallPromptService\n) => {\n  return () => installPromptService.init();\n};\n","import { APP_INITIALIZER } from '@angular/core';\nimport { installPromptServiceFactory } from './install-pompt.service.factory';\nimport { InstallPromptService } from './install-prompt.service';\n\nexport const installPromptServiceProvider = {\n  provide: APP_INITIALIZER,\n  useFactory: installPromptServiceFactory,\n  deps: [InstallPromptService],\n  multi: true,\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InstallPromptService {\n  installPromptEventSource = new BehaviorSubject<Event | undefined>(undefined);\n  installPromptEvent$ = this.installPromptEventSource.asObservable();\n\n  reset() {\n    this.installPromptEventSource.next(undefined);\n  }\n\n  init() {\n    console.log('Ich bin hier!');\n    fromEvent(window, 'beforeinstallprompt').subscribe((event) => {\n      console.log('test 2!');\n      event.preventDefault();\n      this.installPromptEventSource.next(event);\n    });\n  }\n\n  constructor() {}\n}\n","import {\n  bindCallback,\n  catchError,\n  concatMap,\n  from,\n  fromEvent,\n  map,\n  merge,\n  Observable,\n  take,\n  throwError,\n} from 'rxjs';\n\nexport const blobToDataURL = (blob: Blob): Observable<string> => {\n  const result$ = new Observable<string>((observer$) => {\n    try {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        if (reader.result) {\n          observer$.next(reader.result as string);\n          observer$.complete();\n        } else {\n          throw new DOMException('Image Result is empty!');\n        }\n      });\n      reader.readAsDataURL(blob);\n    } catch (e) {\n      observer$.error(e);\n    }\n  });\n  return result$;\n};\n\nexport const blobToArrayBuffer = (blob: Blob): Observable<ArrayBuffer> => {\n  try {\n    return from(blob.arrayBuffer());\n  } catch (e) {\n    return throwError(() => e);\n  }\n};\n\nexport const blobToImageData = (blob: Blob): Observable<ImageData> => {\n  try {\n    const objectURL = URL.createObjectURL(blob);\n    return drawImageToCanvas(objectURL).pipe(\n      catchError((err) => {\n        URL.revokeObjectURL(objectURL);\n        throw err;\n      }),\n      map((canvas) => {\n        URL.revokeObjectURL(objectURL);\n        return canvas\n          .getContext('2d')!\n          .getImageData(0, 0, canvas.width, canvas.height);\n      })\n    );\n  } catch (e) {\n    return throwError(e);\n  }\n};\n\nexport const drawImageToCanvas = (\n  url: string\n): Observable<HTMLCanvasElement> => {\n  try {\n    const image = new Image();\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const objectURL = url;\n    //throw Error when Error occurs or form to ImageData\n    const result$ = merge(\n      fromEvent(image, 'error').pipe(\n        map((event) => {\n          //need to Revoke ObjectURL so no MemoryLeek occurs\n          throw event;\n        })\n      ),\n      fromEvent(image, 'load').pipe(\n        take(1),\n        map(() => {\n          const [width, height] = [image.width, image.height];\n          canvas.width = width;\n          canvas.height = height;\n          ctx!.drawImage(image, 0, 0);\n          return canvas;\n        })\n      )\n    );\n    image.src = objectURL;\n    return result$;\n  } catch (e) {\n    return throwError(e);\n  }\n};\n\nexport const dataUrlToBlob = (dataURL: string) => {\n  if ('fetch' in window) {\n    return from(fetch(dataURL)).pipe(\n      concatMap((response) => from(response.blob()))\n    );\n  } else {\n    return drawImageToCanvas(dataURL).pipe(\n      concatMap((canvas) => {\n        const toBlob$ = bindCallback(\n          (callback: (blob: Blob | null) => void) => {\n            canvas.toBlob(callback);\n          }\n        );\n        return toBlob$().pipe(\n          map((blob) => {\n            if (!blob) {\n              throw new DOMException('Not possible to Build Blob!');\n            }\n            return blob;\n          })\n        );\n      })\n    );\n  }\n};\n\nexport const dataURLToFile = (\n  dataURL: string,\n  fileName: string\n): Observable<File> => {\n  return dataUrlToBlob(dataURL).pipe(\n    map((blob) => new File([blob], fileName, { type: blob.type }))\n  );\n};\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Directive()\r\nexport class AbstractDocumentDownloadButtonComponent<T> {\r\n  @Input()\r\n  value?: T;\r\n\r\n  @Output()\r\n  download = new EventEmitter<[File, string?]>();\r\n}\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Directive()\r\nexport abstract class AbstractDocumentPreviewComponent<T> {\r\n  @Input()\r\n  expand = false;\r\n\r\n  @Input()\r\n  value?: T;\r\n\r\n  @Output()\r\n  showMore = new EventEmitter<T>();\r\n\r\n  constructor() {}\r\n}\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Directive()\r\nexport class AbstractDocumentShareButtonComponent<T> {\r\n  @Input()\r\n  value?: T;\r\n\r\n  @Input()\r\n  canShare = false;\r\n\r\n  @Output()\r\n  share = new EventEmitter<ShareData>();\r\n\r\n  @Output()\r\n  shareContentCreated = new EventEmitter<ShareData>();\r\n}\r\n","import { Directive, Input } from '@angular/core';\n\n@Directive()\nexport abstract class AbstractDocumentComponent<T> {\n  @Input()\n  value?: T;\n}\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-preview-template',\r\n  template: `\r\n    <mat-card\r\n      [class]=\"expand ? 'document-preview-expanded' : 'document-preview'\"\r\n    >\r\n      <ng-container *ngIf=\"!isLoading; else spinner\">\r\n        <ng-content select=\"[theWalletDocumentPreviewHeader]\"></ng-content>\r\n        <ng-container *ngIf=\"expand\">\r\n          <ng-content\r\n            select=\"[theWalletDocumentPreviewExpandedContent]\"\r\n          ></ng-content>\r\n        </ng-container>\r\n        <mat-card-footer class=\"document-preview-footer\">\r\n          <the-wallet-icon-button (click)=\"toogleExpand($event)\">{{\r\n            expand ? 'expand_less' : 'expand_more'\r\n          }}</the-wallet-icon-button>\r\n          <div class=\"document-preview-actions\">\r\n            <ng-content select=\"[theWalletDocumentPreviewActions]\"></ng-content>\r\n          </div>\r\n        </mat-card-footer>\r\n      </ng-container>\r\n      <ng-template #spinner>\r\n        <mat-spinner></mat-spinner>\r\n      </ng-template>\r\n    </mat-card>\r\n  `,\r\n  styleUrls: ['./document-preview-template.component.scss'],\r\n})\r\nexport class DocumentPreviewTemplateComponent {\r\n  @Input()\r\n  expand = false;\r\n\r\n  @Input()\r\n  isLoading = false;\r\n\r\n  toogleExpand($event: MouseEvent) {\r\n    this.expand = !this.expand;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-document-template',\r\n  template: `\r\n    <div class=\"document\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./document-template.component.scss'],\r\n})\r\nexport class DocumentTemplateComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[theWalletDocumentPreviewActions]',\r\n})\r\nexport class DocumentPreviewActionsDirective {\r\n  constructor() {}\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[theWalletDocumentPreviewExpandedContent]',\r\n})\r\nexport class DocumentPreviewExpandedContentDirective {\r\n  constructor() {}\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[theWalletDocumentPreviewHeader]',\r\n})\r\nexport class DocumentPreviewHeaderDirective {\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DocumentPreviewTemplateComponent } from './components/templates/document-preview-template/document-preview-template.component';\r\nimport { UiComponentsModule } from '../ui-components/ui-components.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { DocumentPreviewActionsDirective } from './directives/document-preview-actions.directive';\r\nimport { DocumentPreviewHeaderDirective } from './directives/document-preview-header.directive';\r\nimport { DocumentPreviewExpandedContentDirective } from './directives/document-preview-expanded-content.directive';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { DocumentTemplateComponent } from './components/templates/document-template/document-template.component';\r\nimport { AbstractDocumentDownloadButtonComponent } from './components/pages/abstract-document-download-button/abstract-document-download-button.component';\r\nimport { AbstractDocumentShareButtonComponent } from './components/pages/abstract-document-share-button/abstract-document-share-button.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DocumentPreviewTemplateComponent,\r\n    DocumentPreviewActionsDirective,\r\n    DocumentPreviewHeaderDirective,\r\n    DocumentPreviewExpandedContentDirective,\r\n    DocumentTemplateComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UiComponentsModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    DocumentPreviewTemplateComponent,\r\n    DocumentPreviewActionsDirective,\r\n    DocumentPreviewExpandedContentDirective,\r\n    DocumentPreviewHeaderDirective,\r\n    DocumentTemplateComponent,\r\n  ],\r\n})\r\nexport class DocumentModuleApiModule {}\r\n","import { forwardRef, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FileSystemService } from './services/FileSystem.service';\r\nimport { detectFileSystemAccessApi } from './utils/file-system-access-api.utils';\r\nimport { DomFileApiService } from './services/dom-file-api.service';\r\nimport { FileSystemAccessApiService } from './services/file-system-access-api.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  providers: [\r\n    {\r\n      provide: FileSystemService,\r\n      useExisting: forwardRef(() => {\r\n        return detectFileSystemAccessApi()\r\n          ? FileSystemAccessApiService\r\n          : DomFileApiService;\r\n      }),\r\n    },\r\n  ],\r\n  imports: [CommonModule],\r\n})\r\nexport class FileSystemModule {}\r\n","import { Observable } from 'rxjs';\n\nexport abstract class FileSystemService {\n  abstract readFiles(\n    types?: FilePickerAcceptType[],\n    allowMultipleFiles?: boolean\n  ): Observable<File[]>;\n\n  abstract writeFile(\n    file: File,\n    suggestedName?: string,\n    types?: FilePickerAcceptType[],\n    excludeAcceptAllOption?: boolean\n  ): Observable<void>;\n}\n","import { Injectable } from '@angular/core';\r\nimport { FileSystemService } from './FileSystem.service';\r\nimport { fromEvent, map, Observable, take, throwError } from 'rxjs';\r\nimport { filePickerAcceptTypesToAcceptString } from '../utils/dom-file-api.utils';\r\nimport { blobToDataURL } from '../../commons/utils/image-conversion.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DomFileApiService implements FileSystemService {\r\n  constructor() {}\r\n\r\n  writeFile(file: File, suggestedName?: string): Observable<void> {\r\n    try {\r\n      const aElement = document.createElement('a');\r\n      return blobToDataURL(file).pipe(\r\n        map((dataURL) => {\r\n          aElement.href = dataURL;\r\n          aElement.download = suggestedName || '';\r\n          aElement.click();\r\n          return;\r\n        })\r\n      );\r\n    } catch (e) {\r\n      return throwError(() => e);\r\n    }\r\n  }\r\n\r\n  readFiles(\r\n    types?: FilePickerAcceptType[],\r\n    allowMultipleFiles?: boolean\r\n  ): Observable<File[]> {\r\n    try {\r\n      const inputElement = document.createElement('input');\r\n      inputElement.type = 'file';\r\n      inputElement.multiple = allowMultipleFiles || false;\r\n      inputElement.accept = types\r\n        ? filePickerAcceptTypesToAcceptString(types)\r\n        : '';\r\n      //Browsers does not send a change event when the file picker is closed.\r\n      const blob$ = fromEvent(inputElement, 'change').pipe(\r\n        take(1),\r\n        map(() => {\r\n          const fileList = inputElement.files;\r\n          if (!fileList || fileList.length < 1) {\r\n            throw new DOMException('No File selected!');\r\n          }\r\n          return Array.from(fileList);\r\n        })\r\n      );\r\n      inputElement.click();\r\n      return blob$;\r\n    } catch (e) {\r\n      return throwError(() => e);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { concatMap, forkJoin, from, map, Observable, throwError } from 'rxjs';\r\nimport { FileSystemService } from './FileSystem.service';\r\nimport { detectFileSystemAccessApi } from '../utils/file-system-access-api.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileSystemAccessApiService implements FileSystemService {\r\n  constructor() {}\r\n\r\n  isSupported() {\r\n    return detectFileSystemAccessApi();\r\n  }\r\n\r\n  writeFile(\r\n    file: File,\r\n    suggestedName?: string,\r\n    types?: FilePickerAcceptType[],\r\n    excludeAcceptAllOption?: boolean\r\n  ): Observable<void> {\r\n    return from(\r\n      window.showSaveFilePicker({\r\n        suggestedName: suggestedName,\r\n        types: types,\r\n        excludeAcceptAllOption: excludeAcceptAllOption || true,\r\n      })\r\n    ).pipe(\r\n      concatMap((fileHandle) => from(fileHandle.createWritable())),\r\n      concatMap((writable) =>\r\n        from(writable.write(file)).pipe(map(() => writable))\r\n      ),\r\n      concatMap((writable) => from(writable.close()))\r\n    );\r\n  }\r\n\r\n  readFiles(\r\n    types?: FilePickerAcceptType[],\r\n    allowMultipleFiles?: boolean,\r\n    excludeAcceptAllOption?: boolean\r\n  ): Observable<File[]> {\r\n    try {\r\n      return from(\r\n        window.showOpenFilePicker({\r\n          multiple: allowMultipleFiles || false,\r\n          excludeAcceptAllOption: excludeAcceptAllOption || true,\r\n          types: types,\r\n        })\r\n      ).pipe(\r\n        map((fileHandles) => {\r\n          if (!fileHandles || fileHandles.length < 1) {\r\n            throw new DOMException('No File selected!');\r\n          }\r\n          return fileHandles;\r\n        }),\r\n        concatMap((fileHandles) =>\r\n          forkJoin(fileHandles.map((fileHandle) => from(fileHandle.getFile())))\r\n        )\r\n      );\r\n    } catch (exception) {\r\n      return throwError(() => exception);\r\n    }\r\n  }\r\n}\r\n","export const FilePickerAcceptTypesConstants = {\r\n  IMAGES: {\r\n    description: 'Images',\r\n    accept: {\r\n      'image/jpeg+jpg+png': ['.jpeg', '.jpg', '.png'],\r\n    },\r\n  },\r\n  PKPASS: {\r\n    description: 'PKPASS',\r\n    accept: {\r\n      'application/vnd.apple.pkpass': ['.pkpass'],\r\n    },\r\n  },\r\n};\r\n","export const filePickerAcceptTypesToAcceptString = (\r\n  types: FilePickerAcceptType[]\r\n): string => {\r\n  return types\r\n    .map((type) => {\r\n      const mimeTypes = Object.keys(type.accept);\r\n      return mimeTypes\r\n        .map((mimeType) => {\r\n          const fileExtensions = type.accept[mimeType];\r\n          if (Array.isArray(fileExtensions)) {\r\n            return mimeTypes + ',' + fileExtensions.join();\r\n          } else {\r\n            return mimeTypes + fileExtensions;\r\n          }\r\n        })\r\n        .join();\r\n    })\r\n    .join();\r\n};\r\n","export const detectFSAOpenApiFilePicker = (): boolean => {\r\n  return 'showOpenFilePicker' in window;\r\n};\r\n\r\nexport const detectFSASaveApiFilePicker = (): boolean => {\r\n  return 'showSaveFilePicker' in window;\r\n};\r\n\r\nexport const detectFileSystemAccessApi = (): boolean => {\r\n  return detectFSASaveApiFilePicker() && detectFSAOpenApiFilePicker();\r\n};\r\n","export enum CertificateTypeEnum {\r\n  VACCINATION = 'VACCINATION',\r\n  TEST = 'TEST',\r\n  RECOVERY = 'RECOVERY',\r\n  NOTDETERMINABLE = 'NOTDETERMINABLE',\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-certificate-card-chip-list',\r\n  template: `\r\n    <mat-chip-list aria-label=\"Details\">\r\n      <mat-chip *ngIf=\"isVerified\" color=\"primary\" selected>Verified</mat-chip>\r\n      <mat-chip *ngIf=\"type\" color=\"accent\" selected>{{ type }}</mat-chip>\r\n    </mat-chip-list>\r\n  `,\r\n  styleUrls: ['./certificate-card-chip-list.component.scss'],\r\n})\r\nexport class CertificateCardChipListComponent {\r\n  @Input()\r\n  isVerified = false;\r\n\r\n  @Input()\r\n  type = '';\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-certificate-card-header',\r\n  template: `\r\n    <ng-container *ngIf=\"value; else progressspinner\">\r\n      <mat-card-header class=\"certificate-card-header\">\r\n        <button\r\n          mat-card-avatar\r\n          mat-fab-mini\r\n          disabled\r\n          class=\"document-header-avatar\"\r\n        >\r\n          <mat-icon\r\n            aria-label=\"Vaccination Image\"\r\n            class=\"certificate-header-icon\"\r\n            >{{ value | toCertificateTypeIcon }}</mat-icon\r\n          >\r\n        </button>\r\n        <mat-card-title>{{ value.nam | toDisplayName }}</mat-card-title>\r\n        <mat-card-subtitle class=\"secondary-text\"\r\n          >{{ value | certificateTypeName }} Certificate\r\n        </mat-card-subtitle>\r\n        <the-wallet-certificate-card-chip-list\r\n          class=\"certificate-card-header-chip-list\"\r\n          [isVerified]=\"isVerified\"\r\n          [type]=\"value | certificateTypeName\"\r\n        ></the-wallet-certificate-card-chip-list>\r\n      </mat-card-header>\r\n    </ng-container>\r\n    <ng-template #progressspinner>\r\n      <mat-card-header class=\"progress-spinner-card-header\">\r\n        <mat-spinner></mat-spinner>\r\n      </mat-card-header>\r\n    </ng-template>\r\n  `,\r\n  styleUrls: ['./certificate-card-header.component.scss'],\r\n})\r\nexport class CertificateCardHeaderComponent {\r\n  @Input()\r\n  value?: HealthCertificateModel;\r\n\r\n  @Input()\r\n  isVerified = false;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-person-detail',\r\n  template: `\r\n    <mat-list>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Name</p>\r\n        <h1 mat-line>{{ value.nam | toDisplayName }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Birthday</p>\r\n        <h1 mat-line>{{ value.dob | toLocaleDate }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n    </mat-list>\r\n  `,\r\n  styleUrls: ['./person-detail.component.scss'],\r\n})\r\nexport class PersonDetailComponent {\r\n  @Input()\r\n  value!: HealthCertificateModel;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { RecoveryEntry } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-recovery-detail',\r\n  template: `\r\n    <mat-list>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Target Disease</p>\r\n        <h1 mat-line>{{ value.tg | targetDisease }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Date of first positive Test</p>\r\n        <h1 mat-line>{{ value.fr | toLocaleDate }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Valid from</p>\r\n        <h1 mat-line>{{ value.df | toLocaleDate }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Valid until</p>\r\n        <h1 mat-line>{{ value.du | toLocaleDate }}</h1>\r\n      </mat-list-item>\r\n    </mat-list>\r\n    <the-wallet-default-expansion-panel title=\"Details\">\r\n      <mat-list>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Country</p>\r\n          <h1 mat-line>{{ value.co | toCountryName }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Certificate Issuer</p>\r\n          <h1 mat-line>{{ value.is }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Unique Certificate ID</p>\r\n          <h1 mat-line>{{ value.ci }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n      </mat-list>\r\n    </the-wallet-default-expansion-panel>\r\n  `,\r\n  styleUrls: ['./recovery-detail.component.scss'],\r\n})\r\nexport class RecoveryDetailComponent {\r\n  @Input()\r\n  value!: RecoveryEntry;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { TestEntry } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-test-detail',\r\n  template: `\r\n    <mat-list>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Test Result</p>\r\n        <h1 mat-line>{{ value.tr | toTestResult }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Test Type</p>\r\n        <h1 mat-line>{{ value.tt | testType }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Sample Collection Date</p>\r\n        <h1 mat-line>{{ value.sc | toLocaleDate }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Target Disease</p>\r\n        <h1 mat-line>{{ value.tg | targetDisease }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item *ngIf=\"value.nm\">\r\n        <p mat-line>Test Name</p>\r\n        <h1 mat-line>{{ value.nm }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Testing Center</p>\r\n        <h1 mat-line>{{ value.tc }}</h1>\r\n      </mat-list-item>\r\n    </mat-list>\r\n    <the-wallet-default-expansion-panel title=\"Details\">\r\n      <mat-list>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item *ngIf=\"value.ma\">\r\n          <p mat-line>Manufacturer</p>\r\n          <h1 mat-line>{{ value.ma | testManufacturer }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Country of Test</p>\r\n          <h1 mat-line>{{ value.co | toCountryName }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Certificate Issuer</p>\r\n          <h1 mat-line>{{ value.is }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Unique Certificate ID</p>\r\n          <h1 mat-line>{{ value.ci }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n      </mat-list>\r\n    </the-wallet-default-expansion-panel>\r\n  `,\r\n  styleUrls: ['./test-detail.component.scss'],\r\n})\r\nexport class TestDetailComponent {\r\n  @Input()\r\n  value!: TestEntry;\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { VaccinationEntry } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-vaccination-detail',\r\n  template: `\r\n    <mat-list>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Vaccine - Manufacturer</p>\r\n        <h1 mat-line>\r\n          {{ value.mp | vaccine }} - {{ value.ma | vaccineManufacturer }}\r\n        </h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Target Disease</p>\r\n        <h1 mat-line>{{ value.tg | targetDisease }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Vaccination Date</p>\r\n        <h1 mat-line>{{ value.dt | toLocaleDate }}</h1>\r\n      </mat-list-item>\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <p mat-line>Dose Nr.</p>\r\n        <h1 mat-line>{{ value.dn }} / {{ value.sd }}</h1>\r\n      </mat-list-item>\r\n    </mat-list>\r\n    <the-wallet-default-expansion-panel title=\"Details\">\r\n      <mat-list>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Vaccine Type</p>\r\n          <h1 mat-line>{{ value.vp | vaccineType }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Country of Vaccination</p>\r\n          <h1 mat-line>{{ value.co | toCountryName }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Certificate Issuer</p>\r\n          <h1 mat-line>{{ value.is }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n        <mat-list-item>\r\n          <p mat-line>Unique Certificate ID</p>\r\n          <h1 mat-line>{{ value.ci }}</h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n      </mat-list>\r\n    </the-wallet-default-expansion-panel>\r\n  `,\r\n  styleUrls: ['./vaccination-detail.component.scss'],\r\n})\r\nexport class VaccinationDetailComponent {\r\n  @Input()\r\n  value!: VaccinationEntry;\r\n}\r\n","import { Directive, Input } from '@angular/core';\nimport { CertificateWrapperModel } from '../../../CertificateWrapper.model';\nimport { concatMap, Subject } from 'rxjs';\nimport { dataURLToFile } from '../../../../commons/utils/image-conversion.utils';\nimport { HealthCertificateShareButtonComponent } from '../../pages/helth-certificate-share-button/health-certificate-share-button.component';\nimport { QRCodeGeneratorService } from '../../../../qrcode-generator/services/qrcode-generator.service';\n\n@Directive()\nexport abstract class HealthCertificateAbstractButtonComponent {\n  private _value?: CertificateWrapperModel;\n  private qrCodeFileSource = new Subject<File>();\n\n  qrCodeFile$ = this.qrCodeFileSource.asObservable();\n\n  @Input()\n  get value(): CertificateWrapperModel | undefined {\n    return this._value;\n  }\n  set value(value: CertificateWrapperModel | undefined) {\n    if (value) {\n      this._value = value;\n      this.qrCodeService\n        .toDataURL(value.qrCode)\n        .pipe(\n          concatMap((dataURL) =>\n            dataURLToFile(\n              dataURL,\n              HealthCertificateShareButtonComponent.FILE_NAME\n            )\n          )\n        )\n        .subscribe({\n          next: (file) => this.qrCodeFileSource.next(file),\n        });\n    }\n  }\n\n  constructor(private qrCodeService: QRCodeGeneratorService) {}\n}\n","import { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\nimport { CertificateTypeEnum } from '../../../CertificateType.enum';\n\nexport function getCertificateType(\n  hcert: HealthCertificateModel\n): CertificateTypeEnum {\n  if (hcert.v && hcert.v.length > 0) {\n    return CertificateTypeEnum.VACCINATION;\n  }\n  if (hcert.t && hcert.t.length > 0) {\n    return CertificateTypeEnum.TEST;\n  }\n  if (hcert.r && hcert.r.length > 0) {\n    return CertificateTypeEnum.RECOVERY;\n  }\n  return CertificateTypeEnum.NOTDETERMINABLE;\n}\n","import { Component, Input } from '@angular/core';\r\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\nimport { CertificateTypeEnum } from '../../../CertificateType.enum';\r\n\r\n@Component({\r\n  selector: 'the-wallet-heatlh-certificate-card',\r\n  template: `\r\n    <mat-card class=\"health-certificate-card\">\r\n      <the-wallet-certificate-card-header\r\n        [isVerified]=\"isVerified\"\r\n        [value]=\"value\"\r\n      ></the-wallet-certificate-card-header>\r\n      <mat-divider></mat-divider>\r\n      <the-wallet-qrcode mat-card-image [value]=\"qrCode\"></the-wallet-qrcode>\r\n      <mat-divider></mat-divider>\r\n      <br />\r\n      <mat-card-content>\r\n        <h2>Person Details</h2>\r\n        <the-wallet-person-detail [value]=\"value\"></the-wallet-person-detail>\r\n        <br />\r\n        <h2>Certificate Details</h2>\r\n        <ng-container [ngSwitch]=\"value | certificateType\" ]>\r\n          <the-wallet-vaccination-detail\r\n            *ngSwitchCase=\"certificateTypeEnum.VACCINATION\"\r\n            [value]=\"value.v![0]\"\r\n          >\r\n          </the-wallet-vaccination-detail>\r\n          <the-wallet-test-detail\r\n            *ngSwitchCase=\"certificateTypeEnum.TEST\"\r\n            [value]=\"value.t![0]\"\r\n          >\r\n          </the-wallet-test-detail>\r\n          <the-wallet-recovery-detail\r\n            *ngSwitchCase=\"certificateTypeEnum.RECOVERY\"\r\n            [value]=\"value.r![0]\"\r\n          >\r\n          </the-wallet-recovery-detail>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n  styleUrls: ['./heatlh-certificate-card.component.scss'],\r\n})\r\nexport class HeatlhCertificateCardComponent {\r\n  certificateTypeEnum = CertificateTypeEnum;\r\n\r\n  @Input()\r\n  value!: HealthCertificateModel;\r\n\r\n  @Input()\r\n  qrCode!: string;\r\n\r\n  @Input()\r\n  isVerified = false;\r\n}\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { HealthCertificateAbstractButtonComponent } from '../../organisms/health-certificate-abstract-button/health-certificate-abstract-button.component';\r\nimport { QRCodeGeneratorService } from '../../../../qrcode-generator/services/qrcode-generator.service';\r\nimport { AbstractDocumentDownloadButtonComponent } from '../../../../document-module-api/components/pages/abstract-document-download-button/abstract-document-download-button.component';\r\nimport { CertificateWrapperModel } from '../../../CertificateWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-health-certificate-download-button',\r\n  template: `\r\n    <the-wallet-download-button\r\n      *ngIf=\"qrCodeFile$ | async as qrCodeFile\"\r\n      (click)=\"download.emit([qrCodeFile, FILE_NAME])\"\r\n    ></the-wallet-download-button>\r\n  `,\r\n  styleUrls: ['./health-certificate-download-button.component.scss'],\r\n})\r\nexport class HealthCertificateDownloadButtonComponent\r\n  extends HealthCertificateAbstractButtonComponent\r\n  implements AbstractDocumentDownloadButtonComponent<CertificateWrapperModel>\r\n{\r\n  readonly FILE_NAME = 'Health_Certificate.png';\r\n\r\n  @Output()\r\n  download = new EventEmitter<[File, string?]>();\r\n\r\n  constructor(_qrCodeService: QRCodeGeneratorService) {\r\n    super(_qrCodeService);\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[theWalletHealthCertificatePreviewActions]',\n})\nexport class HealthCertificatePreviewActionsDirective {\n  constructor() {}\n}\n","import { Component } from '@angular/core';\r\nimport { AbstractDocumentPreviewComponent } from '../../../../document-module-api/components/pages/abstract-document-preview/abstract-document-preview.component';\r\nimport { CertificateWrapperModel } from '../../../CertificateWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-health-certificate-preview',\r\n  template: `\r\n    <the-wallet-document-preview-template [isLoading]=\"!value\">\r\n      <the-wallet-certificate-card-header\r\n        theWalletDocumentPreviewHeader\r\n        *ngIf=\"value\"\r\n        [value]=\"value.healthCertificate\"\r\n        [isVerified]=\"value.isVerified\"\r\n        (click)=\"showMore.emit(value)\"\r\n      >\r\n      </the-wallet-certificate-card-header>\r\n      <ng-container theWalletDocumentPreviewExpandedContent>\r\n        <the-wallet-qrcode\r\n          *ngIf=\"value\"\r\n          [value]=\"value.qrCode\"\r\n          (click)=\"showMore.emit(value)\"\r\n          mat-card-image\r\n        >\r\n        </the-wallet-qrcode>\r\n      </ng-container>\r\n      <ng-container theWalletDocumentPreviewActions>\r\n        <ng-content\r\n          select=\"[theWalletHealthCertificatePreviewActions]\"\r\n        ></ng-content>\r\n      </ng-container>\r\n    </the-wallet-document-preview-template>\r\n  `,\r\n  styleUrls: ['./health-certificate-preview.component.scss'],\r\n})\r\nexport class HealthCertificatePreviewComponent extends AbstractDocumentPreviewComponent<CertificateWrapperModel> {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { CovidCertificateService } from '../../../services/covid-certificate.service';\r\nimport { Observable } from 'rxjs';\r\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\nimport { CertificateWrapperModel } from '../../../CertificateWrapper.model';\r\nimport { AbstractDocumentComponent } from '../../../../document-module-api/components/pages/abstract-document/abstract-document.component';\r\n\r\n@Component({\r\n  selector: 'the-wallet-health-certificate',\r\n  template: `\r\n    <the-wallet-document-template\r\n      *ngIf=\"healthCertificateClaim$ | async as healthCertificateClaim\"\r\n    >\r\n      <the-wallet-heatlh-certificate-card\r\n        [value]=\"healthCertificateClaim.healthCertificate\"\r\n        [qrCode]=\"value!.qrCode\"\r\n        [isVerified]=\"healthCertificateClaim.isVerified\"\r\n      >\r\n      </the-wallet-heatlh-certificate-card>\r\n    </the-wallet-document-template>\r\n  `,\r\n  styleUrls: ['./health-certificate.component.scss'],\r\n})\r\nexport class HealthCertificateComponent\r\n  extends AbstractDocumentComponent<CertificateWrapperModel>\r\n  implements OnChanges\r\n{\r\n  healthCertificateClaim$?: Observable<{\r\n    healthCertificate: HealthCertificateModel;\r\n    isVerified: boolean;\r\n  }>;\r\n\r\n  constructor(private covidCertificateService: CovidCertificateService) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes && changes['value'] && changes['value'].currentValue) {\r\n      this.healthCertificateClaim$ = this.covidCertificateService.decode(\r\n        changes['value'].currentValue.qrCode\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { QRCodeGeneratorService } from '../../../../qrcode-generator/services/qrcode-generator.service';\r\nimport { HealthCertificateAbstractButtonComponent } from '../../organisms/health-certificate-abstract-button/health-certificate-abstract-button.component';\r\nimport { AbstractDocumentShareButtonComponent } from '../../../../document-module-api/components/pages/abstract-document-share-button/abstract-document-share-button.component';\r\nimport { CertificateWrapperModel } from '../../../CertificateWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-helth-certificate-share-button',\r\n  template: `\r\n    <the-wallet-share-button\r\n      *ngIf=\"canShare\"\r\n      (click)=\"share.emit(_shareData)\"\r\n    ></the-wallet-share-button>\r\n  `,\r\n  styleUrls: ['./health-certificate-share-button.component.scss'],\r\n})\r\nexport class HealthCertificateShareButtonComponent\r\n  extends HealthCertificateAbstractButtonComponent\r\n  implements\r\n    OnInit,\r\n    AbstractDocumentShareButtonComponent<CertificateWrapperModel>\r\n{\r\n  _shareData?: ShareData;\r\n  static readonly FILE_NAME = 'Health_Certificate.png';\r\n  static readonly SHARE_TEXT = 'EU Health Certificate';\r\n  static readonly SHARE_TITLE = 'Health Certificate';\r\n\r\n  ngOnInit() {\r\n    this.qrCodeFile$.subscribe((file) => {\r\n      this._shareData = {\r\n        files: [file],\r\n        text: HealthCertificateShareButtonComponent.SHARE_TEXT,\r\n        title: HealthCertificateShareButtonComponent.SHARE_TITLE,\r\n      };\r\n      this.shareContentCreated.emit(this._shareData);\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  canShare = false;\r\n\r\n  @Output()\r\n  share = new EventEmitter<ShareData>();\r\n\r\n  @Output()\r\n  shareContentCreated = new EventEmitter<ShareData>();\r\n\r\n  constructor(private _qrCodeService: QRCodeGeneratorService) {\r\n    super(_qrCodeService);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HealthCertificateComponent } from './components/pages/health-certificate/health-certificate.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { VaccinationDetailComponent } from './components/molecules/vaccination-detail/vaccination-detail.component';\r\nimport { TestDetailComponent } from './components/molecules/test-detail/test-detail.component';\r\nimport { RecoveryDetailComponent } from './components/molecules/recovery-detail/recovery-detail.component';\r\nimport { PersonDetailComponent } from './components/molecules/person-detail/person-detail.component';\r\nimport { CertificateTypeNamePipe } from './pipes/certificate-type-name.pipe';\r\nimport { HeatlhCertificateCardComponent } from './components/organisms/health-certificate-card/heatlh-certificate-card.component';\r\nimport { TestTypePipe } from './pipes/test-type.pipe';\r\nimport { TargetDiseasePipe } from './pipes/target-disease.pipe';\r\nimport { VaccineTypePipe } from './pipes/vaccine-type.pipe';\r\nimport { VaccinePipe } from './pipes/vaccine.pipe';\r\nimport { VaccineManufacturerPipe } from './pipes/VaccineManufacturer.pipe';\r\nimport { ToLocaleDatePipe } from './pipes/to-locale-date.pipe';\r\nimport { ToCountryNamePipe } from './pipes/to-country-name.pipe';\r\nimport { TestManufacturerPipe } from './pipes/test-manufacturer.pipe';\r\nimport { ToTestResultPipe } from './pipes/to-test-result.pipe';\r\nimport { ToDisplayNamePipe } from './pipes/to-display-name.pipe';\r\nimport { CertificateTypePipe } from './pipes/certificate-type.pipe';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { CertificateCardChipListComponent } from './components/molecules/certificate-card-chip-list/certificate-card-chip-list.component';\r\nimport { HealthCertificatePreviewComponent } from './components/pages/health-certificate-preview/health-certificate-preview.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ToCertificateTypeIconPipe } from './pipes/to-certificate-type-icon.pipe';\r\nimport { CertificateCardHeaderComponent } from './components/molecules/certificate-card-header/certificate-card-header.component';\r\nimport { UiComponentsModule } from '../ui-components/ui-components.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { HealthCertificatePreviewActionsDirective } from './components/pages/health-certificate-preview/health-certificate-preview-actions.directive';\r\nimport { HealthCertificateShareButtonComponent } from './components/pages/helth-certificate-share-button/health-certificate-share-button.component';\r\nimport { HealthCertificateDownloadButtonComponent } from './components/pages/health-certificate-download-button/health-certificate-download-button.component';\r\nimport { DocumentModuleApiModule } from '../document-module-api/document-module-api.module';\r\nimport { QRCodeGeneratorModule } from '../qrcode-generator/qrcode-generator.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HealthCertificateComponent,\r\n    HeatlhCertificateCardComponent,\r\n    VaccinationDetailComponent,\r\n    TestDetailComponent,\r\n    RecoveryDetailComponent,\r\n    TargetDiseasePipe,\r\n    VaccineTypePipe,\r\n    VaccinePipe,\r\n    VaccineManufacturerPipe,\r\n    ToLocaleDatePipe,\r\n    ToCountryNamePipe,\r\n    TestTypePipe,\r\n    TestTypePipe,\r\n    TestManufacturerPipe,\r\n    ToTestResultPipe,\r\n    PersonDetailComponent,\r\n    ToDisplayNamePipe,\r\n    CertificateTypeNamePipe,\r\n    CertificateTypePipe,\r\n    CertificateCardChipListComponent,\r\n    HealthCertificatePreviewComponent,\r\n    ToCertificateTypeIconPipe,\r\n    CertificateCardHeaderComponent,\r\n    HealthCertificatePreviewActionsDirective,\r\n    HealthCertificateShareButtonComponent,\r\n    HealthCertificateDownloadButtonComponent,\r\n  ],\r\n  exports: [\r\n    HealthCertificateComponent,\r\n    HealthCertificatePreviewComponent,\r\n    HealthCertificatePreviewActionsDirective,\r\n    HealthCertificateShareButtonComponent,\r\n    HealthCertificateDownloadButtonComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    UiComponentsModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    DocumentModuleApiModule,\r\n    QRCodeGeneratorModule,\r\n  ],\r\n})\r\nexport class HealthCertificateModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport vaccineManufacturerJSON from '../../../../assets/ehn-dcc-valuesets/vaccine-mah-manf.json';\n\n@Pipe({\n  name: 'vaccineManufacturer',\n})\nexport class VaccineManufacturerPipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = vaccineManufacturerJSON.valueSetValues;\n    const manufacturerObject = valueSets[value as keyof typeof valueSets];\n    const vaccine = manufacturerObject ? manufacturerObject.display : value;\n    return vaccine;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\nimport { getCertificateType } from '../components/organisms/health-certificate-card/certificate-type.utils';\nimport { CertificateTypeEnum } from '../CertificateType.enum';\n\n@Pipe({\n  name: 'certificateTypeName',\n})\nexport class CertificateTypeNamePipe implements PipeTransform {\n  static readonly VACCINATION_DISPLAY_NAME = 'Vaccination';\n  static readonly TEST_DISPLAY_NAME = 'Test';\n  static readonly RECOVERY_DISPLAY_NAME = 'Recovery';\n\n  transform(value: HealthCertificateModel): string {\n    const certificateType = getCertificateType(value);\n    switch (certificateType) {\n      case CertificateTypeEnum.VACCINATION:\n        return CertificateTypeNamePipe.VACCINATION_DISPLAY_NAME;\n        break;\n      case CertificateTypeEnum.TEST:\n        return CertificateTypeNamePipe.TEST_DISPLAY_NAME;\n        break;\n      case CertificateTypeEnum.RECOVERY:\n        return CertificateTypeNamePipe.RECOVERY_DISPLAY_NAME;\n        break;\n      default:\n        return '';\n        break;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CertificateTypeEnum } from '../CertificateType.enum';\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\nimport { getCertificateType } from '../components/organisms/health-certificate-card/certificate-type.utils';\n\n@Pipe({\n  name: 'certificateType',\n})\nexport class CertificateTypePipe implements PipeTransform {\n  transform(hcert: HealthCertificateModel): CertificateTypeEnum {\n    return getCertificateType(hcert);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport diseaseTargetJSON from '../../../../assets/ehn-dcc-valuesets/disease-agent-targeted.json';\n\n@Pipe({\n  name: 'targetDisease',\n})\nexport class TargetDiseasePipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = diseaseTargetJSON.valueSetValues;\n    const diseaseObject = valueSets[value as keyof typeof valueSets];\n    const disease = diseaseObject ? diseaseObject.display : value;\n    return disease;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport testManufaturerJSON from '../../../../assets/ehn-dcc-valuesets/test-manf.json';\n\n@Pipe({\n  name: 'testManufacturer',\n})\nexport class TestManufacturerPipe implements PipeTransform {\n  transform(value: unknown, ...args: unknown[]): unknown {\n    const valueSets = testManufaturerJSON.valueSetValues;\n    const testManufaturerObject = valueSets[value as keyof typeof valueSets];\n    const testManufacturer = testManufaturerObject\n      ? testManufaturerObject.display\n      : value;\n    return testManufacturer;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport testTypeJSON from '../../../../assets/ehn-dcc-valuesets/test-type.json';\n\n@Pipe({\n  name: 'testType',\n})\nexport class TestTypePipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = testTypeJSON.valueSetValues;\n    const testTypeObject = valueSets[value as keyof typeof valueSets];\n    const testType = testTypeObject ? testTypeObject.display : value;\n    return testType;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { getCertificateType } from '../components/organisms/health-certificate-card/certificate-type.utils';\r\nimport { CertificateTypeEnum } from '../CertificateType.enum';\r\nimport { HealthCertificateModel } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\r\n\r\n@Pipe({\r\n  name: 'toCertificateTypeIcon',\r\n})\r\nexport class ToCertificateTypeIconPipe implements PipeTransform {\r\n  static readonly VACCINATION_ICON = 'vaccines';\r\n  static readonly TEST_ICON = 'policiy';\r\n  static readonly RECOVERY_ICON = 'health_and_safety';\r\n\r\n  transform(value: HealthCertificateModel): unknown {\r\n    const certificateType = getCertificateType(value);\r\n    switch (certificateType) {\r\n      case CertificateTypeEnum.VACCINATION:\r\n        return ToCertificateTypeIconPipe.VACCINATION_ICON;\r\n        break;\r\n      case CertificateTypeEnum.TEST:\r\n        return ToCertificateTypeIconPipe.TEST_ICON;\r\n        break;\r\n      case CertificateTypeEnum.RECOVERY:\r\n        return ToCertificateTypeIconPipe.RECOVERY_ICON;\r\n        break;\r\n      default:\r\n        return '';\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport countryCodes from '../../../../assets/ehn-dcc-valuesets/country-2-codes.json';\n\n@Pipe({\n  name: 'toCountryName',\n})\nexport class ToCountryNamePipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = countryCodes.valueSetValues;\n    const countryCode = valueSets[value as keyof typeof valueSets];\n    const country = countryCode ? countryCode.display : value;\n    return country;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PersonName } from 'covid-certificate-checker/dist/lib/models/HealthCertificate.model';\n\n@Pipe({\n  name: 'toDisplayName',\n})\nexport class ToDisplayNamePipe implements PipeTransform {\n  transform(value: PersonName): string {\n    const foreName = value.gn ? value.gn : '';\n    const standardisedForename = value.gnt ? value.gn : '';\n    const displayForeName = foreName ? foreName : standardisedForename;\n\n    const surName = value.fn ? value.fn : '';\n    const standardisedSurName = value.fnt ? value.fnt : '';\n    const displaySurName = surName ? surName : standardisedSurName;\n\n    return surName + ', ' + foreName;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'toLocaleDate',\n})\nexport class ToLocaleDatePipe implements PipeTransform {\n  transform(value: string): string {\n    try {\n      const date = new Date(value);\n      return date.toLocaleDateString();\n    } catch (e) {\n      console.error(e);\n      return value;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport testResultJSON from '../../../../assets/ehn-dcc-valuesets/test-result.json';\n\n@Pipe({\n  name: 'toTestResult',\n})\nexport class ToTestResultPipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = testResultJSON.valueSetValues;\n    const testResultObject = valueSets[value as keyof typeof valueSets];\n    const testResult = testResultObject ? testResultObject.display : value;\n    return testResult;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport vaccineTypeJSON from '../../../../assets/ehn-dcc-valuesets/vaccine-prophylaxis.json';\n\n@Pipe({\n  name: 'vaccineType',\n})\nexport class VaccineTypePipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = vaccineTypeJSON.valueSetValues;\n    const vaccineTypeObject = valueSets[value as keyof typeof valueSets];\n    const vaccineType = vaccineTypeObject ? vaccineTypeObject.display : value;\n    return vaccineType;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport vaccineJSON from '../../../../assets/ehn-dcc-valuesets/vaccine-medicinal-product.json';\n\n@Pipe({\n  name: 'vaccine',\n})\nexport class VaccinePipe implements PipeTransform {\n  transform(value: string): string {\n    const valueSets = vaccineJSON.valueSetValues;\n    const vaccineObject = valueSets[value as keyof typeof valueSets];\n    const vaccine = vaccineObject ? vaccineObject.display : value;\n    return vaccine;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport ElectronicHealthCertificateChecker from 'covid-certificate-checker';\r\nimport { from, map, Observable, of } from 'rxjs';\r\nimport { TrustListModel } from 'covid-certificate-checker/dist/lib/models/TrustList.model';\r\nimport { DocumentSignerCertificateServiceService } from './document-signer-certificate-service.service';\r\nimport { CertificateWrapperModel } from '../CertificateWrapper.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CovidCertificateService {\r\n  dscList?: TrustListModel;\r\n\r\n  constructor(\r\n    private documentSignerCertificateService: DocumentSignerCertificateServiceService\r\n  ) {\r\n    this.documentSignerCertificateService.getDSCList().subscribe({\r\n      next: (dscList) => (this.dscList = dscList),\r\n      error: (err) => console.log('No DSCList ascertainable', err),\r\n    });\r\n  }\r\n\r\n  isVerifiable() {\r\n    return (\r\n      !!this.dscList &&\r\n      ElectronicHealthCertificateChecker.supportsWebCryptoApi()\r\n    );\r\n  }\r\n\r\n  decode(certificate: string): Observable<CertificateWrapperModel> {\r\n    if (this.isVerifiable()) {\r\n      return from(\r\n        ElectronicHealthCertificateChecker.verifyWithTrustList(\r\n          certificate,\r\n          this.dscList!\r\n        )\r\n      ).pipe(\r\n        map((val) => ({\r\n          healthCertificate: val.healthCertificateClaim.hcert,\r\n          isVerified: val.isVerified,\r\n          qrCode: certificate,\r\n        }))\r\n      );\r\n    } else {\r\n      return of(ElectronicHealthCertificateChecker.decode(certificate)).pipe(\r\n        map((healthCertificateClaim) => ({\r\n          healthCertificate: healthCertificateClaim.hcert,\r\n          isVerified: false,\r\n          qrCode: certificate,\r\n        }))\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { TrustListModel } from 'covid-certificate-checker/dist/lib/models/TrustList.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocumentSignerCertificateServiceService {\n  configURL = 'https://de.test.dscg.ubirch.com/trustList/DSC/';\n\n  constructor(private http: HttpClient) {}\n\n  getDSCList(): Observable<TrustListModel> {\n    return this.http.get(this.configURL, { responseType: 'text' }).pipe(\n      map((result) => {\n        const certificates = result.match(/({\\\"certificates\\\")[\\s\\S]*$/);\n        if (certificates && certificates.length > 0) {\n          return JSON.parse(certificates[0]) as TrustListModel;\n        } else {\n          throw new DOMException('No valid DocumentSignerCertificateList');\n        }\n      })\n    );\n  }\n}\n","export enum PassTypeEnum {\r\n  BOARDINGPASS = 'Boarding Pass',\r\n  COUPON = 'Coupon',\r\n  EVENTICKET = 'Event Ticket',\r\n  GENERIC = 'Generic',\r\n  STORECARD = 'Store Card',\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Field } from '@pkpass/types/src/field';\r\n\r\n@Component({\r\n  selector: 'the-wallet-boarding-pass-primary-field',\r\n  template: `\r\n    <mat-list-item class=\"boarding-pass-primary-field\" *ngIf=\"field\">\r\n      <h1 class=\"boarding-pass-primary-field-line\">{{ field.value || '' }}</h1>\r\n      <p class=\"boarding-pass-primary-field-line secondary-text\">\r\n        {{ field.label || '' }}\r\n      </p>\r\n    </mat-list-item>\r\n  `,\r\n  styleUrls: ['./boarding-pass-primary-field.component.scss'],\r\n})\r\nexport class BoardingPassPrimaryFieldComponent {\r\n  @Input()\r\n  field?: Field;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { PassStructure } from '@pkpass/types/src/low-level';\r\n\r\n@Component({\r\n  selector: 'the-wallet-transit-type-icon',\r\n  template: `\r\n    <mat-icon class=\"transit-type-icon\">{{\r\n      transitType | pkpassTransitTypeIcon\r\n    }}</mat-icon>\r\n  `,\r\n  styleUrls: ['./transit-type-icon.component.scss'],\r\n})\r\nexport class TransitTypeIconComponent {\r\n  @Input()\r\n  transitType?: PassStructure.Transit.Type;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Field } from '@pkpass/types/src/field';\r\nimport { PassStructure } from '@pkpass/types/src/low-level/structure';\r\n\r\n@Component({\r\n  selector: 'the-wallet-boarding-pass-primary-field-list',\r\n  template: `\r\n    <div\r\n      class=\"boarding-pass-primary-field-list\"\r\n      *ngIf=\"fields && fields.length > 1\"\r\n    >\r\n      <the-wallet-boarding-pass-primary-field\r\n        [field]=\"fields![0]\"\r\n      ></the-wallet-boarding-pass-primary-field>\r\n      <the-wallet-transit-type-icon\r\n        [transitType]=\"transitType\"\r\n      ></the-wallet-transit-type-icon>\r\n      <the-wallet-boarding-pass-primary-field\r\n        [field]=\"fields![1]\"\r\n      ></the-wallet-boarding-pass-primary-field>\r\n    </div>\r\n    <ng-container *ngIf=\"fields && fields.length > 2\">\r\n      <the-wallet-pkpass-field-list\r\n        [fields]=\"fields.slice(2)\"\r\n      ></the-wallet-pkpass-field-list>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./boarding-pass-primary-field-list.component.scss'],\r\n})\r\nexport class BoardingPassPrimaryFieldListComponent {\r\n  @Input()\r\n  fields?: Field[] = [];\r\n\r\n  @Input()\r\n  transitType?: PassStructure.Transit.Type;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Barcode } from '@pkpass/types/src/low-level';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-barcode',\r\n  template: `\r\n    <the-wallet-barcode\r\n      *ngIf=\"barcode\"\r\n      [value]=\"barcode.message\"\r\n      [format]=\"barcode.format | transformPKPassBarcodeFormat\"\r\n    ></the-wallet-barcode>\r\n  `,\r\n  styleUrls: ['./pkpass-barcode.component.scss'],\r\n})\r\nexport class PkpassBarcodeComponent {\r\n  @Input()\r\n  barcode?: Barcode;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Field } from '@pkpass/types/src/field';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-field-list',\r\n  template: `\r\n    <mat-list>\r\n      <ng-container *ngFor=\"let field of fields\">\r\n        <mat-list-item class=\"pkpass-field-list-item\">\r\n          <p mat-line>{{ field.label | shorten: DEFAULT_SHORT_VALUE }}</p>\r\n          <h1 mat-line class=\"pkpass-field-list-item-value\">\r\n            {{ field.value | shorten: DEFAULT_SHORT_VALUE }}\r\n          </h1>\r\n        </mat-list-item>\r\n        <mat-divider></mat-divider>\r\n      </ng-container>\r\n    </mat-list>\r\n  `,\r\n  styleUrls: ['./pkpass-field-list.component.scss'],\r\n})\r\nexport class PkpassFieldListComponent {\r\n  readonly DEFAULT_SHORT_VALUE = 40;\r\n\r\n  @Input()\r\n  fields?: Field[];\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Field } from '@pkpass/types/src/field';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-header-field-list',\r\n  template: `\r\n    <div class=\"pkpass-header-field-list\">\r\n      <div *ngFor=\"let field of fields\" class=\"pkpass-header-field-list-item\">\r\n        <div class=\"pkpass-header-field-list-item-line\">{{ field.value }}</div>\r\n        <div class=\"pkpass-header-field-list-item-line\">{{ field.label }}</div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./pkpass-header-field-list.component.scss'],\r\n})\r\nexport class PkpassHeaderFieldListComponent {\r\n  @Input()\r\n  fields?: Field[];\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PassTypeEnum } from '../../../PassType.enum';\r\nimport { PassStructure } from '@pkpass/types/src/low-level/structure';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-primary-fields',\r\n  template: `\r\n    <ng-container *ngIf=\"passFields\">\r\n      <ng-container\r\n        *ngIf=\"passType === passTypeEnum.BOARDINGPASS; else primaryfields\"\r\n      >\r\n        <the-wallet-boarding-pass-primary-field-list\r\n          [fields]=\"passFields.primaryFields\"\r\n          [transitType]=\"passFields | passStructureToTransitType\"\r\n        >\r\n        </the-wallet-boarding-pass-primary-field-list>\r\n      </ng-container>\r\n      <ng-template #primaryfields>\r\n        <h2>Primary Fields</h2>\r\n        <the-wallet-pkpass-header-field-list\r\n          [fields]=\"passFields.primaryFields\"\r\n        >\r\n        </the-wallet-pkpass-header-field-list>\r\n      </ng-template>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./pkpass-primary-fields.component.scss'],\r\n})\r\nexport class PkpassPrimaryFieldsComponent {\r\n  passTypeEnum = PassTypeEnum;\r\n\r\n  @Input()\r\n  passType?: PassTypeEnum;\r\n\r\n  @Input()\r\n  passFields?: PassStructure;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PkpassWrapperModel } from '../../../PkpassWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-card-header',\r\n  template: `\r\n    <ng-container *ngIf=\"value\">\r\n      <mat-card-header class=\"pkpass-card-header\">\r\n        <button\r\n          *ngIf=\"!value.logo; else pkpasslogo\"\r\n          mat-card-avatar\r\n          mat-fab-mini\r\n          disabled\r\n          class=\"certificate-header-avatar\"\r\n        >\r\n          <mat-icon aria-label=\"Pass Icon\"> airplane_ticket</mat-icon>\r\n        </button>\r\n        <mat-card-title>{{\r\n          value.passData.logoText || value.passType\r\n        }}</mat-card-title>\r\n        <mat-card-subtitle class=\"secondary-text\">{{\r\n          value.passData.logoText ? value.passType : ''\r\n        }}</mat-card-subtitle>\r\n        <the-wallet-pkpass-header-field-list\r\n          [fields]=\"value.passFields.headerFields\"\r\n          class=\"secondary-text pkpass-card-header-field-list\"\r\n        ></the-wallet-pkpass-header-field-list>\r\n        <div></div>\r\n      </mat-card-header>\r\n      <ng-template #pkpasslogo>\r\n        <the-wallet-blob-image\r\n          aria-label=\"PKPASS Logo\"\r\n          [blob]=\"value.logo\"\r\n          class=\"pkpass-header-logo\"\r\n        ></the-wallet-blob-image>\r\n      </ng-template>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./pkpass-card-header.component.scss'],\r\n})\r\nexport class PkpassCardHeaderComponent {\r\n  @Input()\r\n  value?: PkpassWrapperModel;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PkpassWrapperModel } from '../../../PkpassWrapper.model';\r\nimport { PassTypeEnum } from '../../../PassType.enum';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-card',\r\n  template: `\r\n    <mat-card class=\"pkpass-card\">\r\n      <the-wallet-pkpass-card-header [value]=\"value\">\r\n      </the-wallet-pkpass-card-header>\r\n      <the-wallet-pkpass-primary-fields\r\n        [passType]=\"value.passType\"\r\n        [passFields]=\"value.passFields\"\r\n        *ngIf=\"value\"\r\n      >\r\n      </the-wallet-pkpass-primary-fields>\r\n      <mat-divider></mat-divider>\r\n      <the-wallet-pkpass-barcode\r\n        *ngIf=\"value\"\r\n        [barcode]=\"value.barcode\"\r\n        mat-card-image\r\n      ></the-wallet-pkpass-barcode>\r\n      <mat-divider></mat-divider>\r\n      <mat-card-content *ngIf=\"value\">\r\n        <br />\r\n        <h2>Details</h2>\r\n        <mat-divider></mat-divider>\r\n        <the-wallet-pkpass-field-list\r\n          [fields]=\"value.passFields.secondaryFields\"\r\n        ></the-wallet-pkpass-field-list>\r\n        <the-wallet-pkpass-field-list\r\n          [fields]=\"value.passFields.auxiliaryFields\"\r\n        ></the-wallet-pkpass-field-list>\r\n        <br />\r\n        <the-wallet-default-expansion-panel\r\n          *ngIf=\"value.passFields.backFields\"\r\n          title=\"Backside\"\r\n          [expanded]=\"false\"\r\n        >\r\n          <the-wallet-pkpass-field-list\r\n            [fields]=\"value.passFields.backFields\"\r\n          ></the-wallet-pkpass-field-list>\r\n        </the-wallet-default-expansion-panel>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n  styleUrls: ['./pkpass-card.component.scss'],\r\n})\r\nexport class PkpassCardComponent {\r\n  passType = PassTypeEnum;\r\n\r\n  @Input()\r\n  value?: PkpassWrapperModel;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractDocumentDownloadButtonComponent } from '../../../../document-module-api/components/pages/abstract-document-download-button/abstract-document-download-button.component';\r\nimport { PkpassWrapperModel } from '../../../PkpassWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-download-button',\r\n  template: `\r\n    <the-wallet-download-button\r\n      *ngIf=\"value\"\r\n      (click)=\"\r\n        download.emit([\r\n          value.file,\r\n          value.passType + PKPASS_DEFAUL_FILE_EXTENSION\r\n        ])\r\n      \"\r\n    ></the-wallet-download-button>\r\n  `,\r\n  styleUrls: ['./pkpass-download-button.component.scss'],\r\n})\r\nexport class PkpassDownloadButtonComponent extends AbstractDocumentDownloadButtonComponent<PkpassWrapperModel> {\r\n  readonly PKPASS_DEFAUL_FILE_EXTENSION = '.pkpass';\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AbstractDocumentPreviewComponent } from '../../../../document-module-api/components/pages/abstract-document-preview/abstract-document-preview.component';\r\nimport { PkpassWrapperModel } from '../../../PkpassWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-preview',\r\n  template: `\r\n    <the-wallet-document-preview-template [isLoading]=\"!value\">\r\n      <the-wallet-pkpass-card-header\r\n        theWalletDocumentPreviewHeader\r\n        [value]=\"value\"\r\n        (click)=\"showMore.emit(value)\"\r\n      ></the-wallet-pkpass-card-header>\r\n      <ng-container theWalletDocumentPreviewExpandedContent>\r\n        <the-wallet-pkpass-primary-fields\r\n          [passType]=\"value.passType\"\r\n          [passFields]=\"value.passFields\"\r\n          *ngIf=\"value\"\r\n          (click)=\"showMore.emit(value)\"\r\n        >\r\n        </the-wallet-pkpass-primary-fields>\r\n        <the-wallet-pkpass-barcode\r\n          mat-card-image\r\n          *ngIf=\"value\"\r\n          [barcode]=\"value.barcode\"\r\n          (click)=\"showMore.emit(value)\"\r\n        ></the-wallet-pkpass-barcode>\r\n      </ng-container>\r\n      <ng-container theWalletDocumentPreviewActions>\r\n        <ng-content select=\"[theWalletPkpassPreviewActions]\"></ng-content>\r\n      </ng-container>\r\n    </the-wallet-document-preview-template>\r\n  `,\r\n  styleUrls: ['./pkpass-preview.component.scss'],\r\n})\r\nexport class PkpassPreviewComponent extends AbstractDocumentPreviewComponent<PkpassWrapperModel> {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { AbstractDocumentShareButtonComponent } from '../../../../document-module-api/components/pages/abstract-document-share-button/abstract-document-share-button.component';\r\nimport { PkpassWrapperModel } from '../../../PkpassWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass-share-button',\r\n  template: `\r\n    <ng-container\r\n      *ngIf=\"\r\n        value &&\r\n        (value.file\r\n          | fileToShareData: value.passType:value.passType) as _shareData\r\n      \"\r\n    >\r\n      <the-wallet-share-button\r\n        *ngIf=\"canShare\"\r\n        (click)=\"share.emit(_shareData)\"\r\n      ></the-wallet-share-button>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./pkpass-share-button.component.scss'],\r\n})\r\nexport class PkpassShareButtonComponent\r\n  extends AbstractDocumentShareButtonComponent<PkpassWrapperModel>\r\n  implements OnChanges\r\n{\r\n  _shareData?: ShareData;\r\n\r\n  readonly SHARE_TITLE = '';\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes &&\r\n      changes['_shareData'] &&\r\n      changes['_shareData'].currentValue\r\n    ) {\r\n      this.shareContentCreated.emit(changes['_shareData'].currentValue);\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AbstractDocumentComponent } from '../../../../document-module-api/components/pages/abstract-document/abstract-document.component';\r\nimport { PkpassWrapperModel } from '../../../PkpassWrapper.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-pkpass',\r\n  template: `\r\n    <the-wallet-document-template>\r\n      <the-wallet-pkpass-card [value]=\"value\"></the-wallet-pkpass-card>\r\n    </the-wallet-document-template>\r\n  `,\r\n  styleUrls: ['./pkpass.component.scss'],\r\n})\r\nexport class PkpassComponent extends AbstractDocumentComponent<PkpassWrapperModel> {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[theWalletPkpassPreviewActions]',\r\n})\r\nexport class PkpassPreviewActionsDirective {\r\n  constructor() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PassStructure } from '@pkpass/types/src/low-level/structure';\r\nimport Transit = PassStructure.Transit;\r\n\r\n@Pipe({\r\n  name: 'passStructureToTransitType',\r\n})\r\nexport class PassStructureToTransitTypePipe implements PipeTransform {\r\n  transform(value: PassStructure): PassStructure.Transit.Type | undefined {\r\n    if ('transitType' in value) {\r\n      return (value as Transit).transitType;\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PassStructure } from '@pkpass/types/src/low-level';\r\n\r\n@Pipe({\r\n  name: 'pkpassTransitTypeIcon',\r\n})\r\nexport class PkpassTransitTypeIconPipe implements PipeTransform {\r\n  transform(\r\n    transitType: PassStructure.Transit.Type | undefined\r\n  ): string | undefined {\r\n    switch (transitType) {\r\n      case PassStructure.Transit.Type.Air:\r\n        return 'connecting_airports';\r\n      case PassStructure.Transit.Type.Boat:\r\n        return 'directions_boat';\r\n      case PassStructure.Transit.Type.Bus:\r\n        return 'directions_bus';\r\n      case PassStructure.Transit.Type.Train:\r\n        return 'directions_bus';\r\n      case PassStructure.Transit.Type.Generic:\r\n        return 'multiple_stop';\r\n      default:\r\n        return transitType;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Barcode } from '@pkpass/types/src/low-level';\r\nimport { BarcodeTypeEnum } from '../../qrcode-generator/services/BarcodeType.enum';\r\n\r\n@Pipe({\r\n  name: 'transformPKPassBarcodeFormat',\r\n})\r\nexport class TransformPKPassBarcodeFormatPipe implements PipeTransform {\r\n  transform(value: Barcode.Type): BarcodeTypeEnum {\r\n    switch (value) {\r\n      case Barcode.Type.Aztec:\r\n        return BarcodeTypeEnum.AZTECCODE;\r\n      case Barcode.Type.Code128:\r\n        return BarcodeTypeEnum.CODE128;\r\n      case Barcode.Type.PDF417:\r\n        return BarcodeTypeEnum.PDF417;\r\n      case Barcode.Type.QR:\r\n        return BarcodeTypeEnum.QRCODE;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PkpassPreviewComponent } from './components/pages/pkpass-preview/pkpass-preview.component';\r\nimport { PkpassComponent } from './components/pages/pkpass/pkpass.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { DocumentModuleApiModule } from '../document-module-api/document-module-api.module';\r\nimport { UiComponentsModule } from '../ui-components/ui-components.module';\r\nimport { PkpassPreviewActionsDirective } from './directives/pkpass-preview-actions.directive';\r\nimport { PkpassCardHeaderComponent } from './components/organisms/pkpass-card-header/pkpass-card-header.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { PkpassHeaderFieldListComponent } from './components/molecules/pkpass-header-field-list/pkpass-header-field-list.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { HealthCertificateModule } from '../health-certificate/health-certificate.module';\r\nimport { PkpassBarcodeComponent } from './components/molecules/pkpass-barcode/pkpass-barcode.component';\r\nimport { QRCodeGeneratorModule } from '../qrcode-generator/qrcode-generator.module';\r\nimport { TransformPKPassBarcodeFormatPipe } from './pipes/transform-pkpass-barcode-format.pipe';\r\nimport { PkpassCardComponent } from './components/organisms/pkpass-card/pkpass-card.component';\r\nimport { PkpassFieldListComponent } from './components/molecules/pkpass-field-list/pkpass-field-list.component';\r\nimport { CommonsModule } from '../commons/commons.module';\r\nimport { PkpassTransitTypeIconPipe } from './pipes/pkpass-transit-type-icon.pipe';\r\nimport { TransitTypeIconComponent } from './components/atoms/transit-type-icon/transit-type-icon.component';\r\nimport { BoardingPassPrimaryFieldListComponent } from './components/molecules/boarding-pass-primary-field-list/boarding-pass-primary-field-list.component';\r\nimport { PassStructureToTransitTypePipe } from './pipes/pass-structure-to-transit-type.pipe';\r\nimport { PkpassPrimaryFieldsComponent } from './components/molecules/pkpass-primary-fields/pkpass-primary-fields.component';\r\nimport { BoardingPassPrimaryFieldComponent } from './components/atoms/boarding-pass-primary-field/boarding-pass-primary-field.component';\r\nimport { PkpassDownloadButtonComponent } from './components/pages/pkpass-download-button/pkpass-download-button.component';\r\nimport { PkpassShareButtonComponent } from './components/pages/pkpass-share-button/pkpass-share-button.component';\r\nimport { WebShareModule } from '../web-share/web-share.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PkpassPreviewComponent,\r\n    PkpassComponent,\r\n    PkpassPreviewActionsDirective,\r\n    PkpassCardHeaderComponent,\r\n    PkpassHeaderFieldListComponent,\r\n    PkpassBarcodeComponent,\r\n    TransformPKPassBarcodeFormatPipe,\r\n    PkpassCardComponent,\r\n    PkpassFieldListComponent,\r\n    PkpassTransitTypeIconPipe,\r\n    TransitTypeIconComponent,\r\n    BoardingPassPrimaryFieldListComponent,\r\n    PassStructureToTransitTypePipe,\r\n    PkpassPrimaryFieldsComponent,\r\n    BoardingPassPrimaryFieldComponent,\r\n    PkpassDownloadButtonComponent,\r\n    PkpassShareButtonComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    DocumentModuleApiModule,\r\n    UiComponentsModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    HealthCertificateModule,\r\n    QRCodeGeneratorModule,\r\n    CommonsModule,\r\n    DocumentModuleApiModule,\r\n    WebShareModule,\r\n  ],\r\n  exports: [\r\n    PkpassPreviewComponent,\r\n    PkpassComponent,\r\n    PkpassDownloadButtonComponent,\r\n    PkpassShareButtonComponent,\r\n    PkpassPreviewActionsDirective,\r\n  ],\r\n})\r\nexport class PkpassModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { readPKPASS } from './pkpass.utils';\r\nimport { PkpassWrapperModel } from '../PkpassWrapper.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PkpassService {\r\n  constructor() {}\r\n\r\n  readPkpass(file: File): Observable<PkpassWrapperModel> {\r\n    return from(readPKPASS(file));\r\n  }\r\n}\r\n","import * as zip from '@zip.js/zip.js';\r\nimport { PassData } from '@pkpass/types';\r\nimport { PkpassWrapperModel } from '../PkpassWrapper.model';\r\nimport { PassTypeEnum } from '../PassType.enum';\r\nimport { PassStructure } from '@pkpass/types/src/low-level/structure';\r\nimport { ManifestModel } from '../Manifest.model';\r\n\r\nexport const passDataToPassStructure = (\r\n  passData: PassData\r\n): [PassTypeEnum, PassStructure] => {\r\n  if ('boardingPass' in passData) {\r\n    return [PassTypeEnum.BOARDINGPASS, passData.boardingPass];\r\n  } else if ('coupon' in passData) {\r\n    return [PassTypeEnum.COUPON, passData.coupon];\r\n  } else if ('eventTicket' in passData) {\r\n    return [PassTypeEnum.EVENTICKET, passData.eventTicket];\r\n  } else if ('generic' in passData) {\r\n    return [PassTypeEnum.GENERIC, passData.generic];\r\n  } else if ('storeCard' in passData) {\r\n    return [PassTypeEnum.STORECARD, passData.storeCard];\r\n  }\r\n  throw new DOMException('No valid PassData found!');\r\n};\r\n\r\nexport const getLogoName = (\r\n  manifest: ManifestModel,\r\n  highResolution: boolean\r\n): string | undefined => {\r\n  const manifestEntries = Object.entries(manifest);\r\n  const logos = manifestEntries\r\n    .filter((entry) => entry[0].startsWith('logo'))\r\n    .map((entry) => entry[0])\r\n    .sort();\r\n  return logos.length > 0\r\n    ? logos[highResolution ? logos.length - 1 : 0]\r\n    : undefined;\r\n};\r\n\r\nexport const readPKPASS = async (file: File): Promise<PkpassWrapperModel> => {\r\n  const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n  const entries = await reader.getEntries();\r\n\r\n  const passJSONEntry = entries.find((entry) => entry.filename === 'pass.json');\r\n  const manifestJSONEntry = entries.find(\r\n    (entry) => entry.filename === 'manifest.json'\r\n  );\r\n\r\n  if (\r\n    passJSONEntry &&\r\n    passJSONEntry.getData &&\r\n    manifestJSONEntry &&\r\n    manifestJSONEntry.getData\r\n  ) {\r\n    const passText = await passJSONEntry.getData(new zip.TextWriter());\r\n    const manifestText = await manifestJSONEntry.getData(new zip.TextWriter());\r\n\r\n    const passData: PassData = JSON.parse(passText);\r\n    const manifest: ManifestModel = JSON.parse(manifestText);\r\n\r\n    const [passType, passStructure] = passDataToPassStructure(passData);\r\n\r\n    const deprecatedBarcode = passData.barcode ? passData.barcode : undefined;\r\n    const barcodeArrayElement =\r\n      passData.barcodes && passData.barcodes.length > 0\r\n        ? passData.barcodes[0]\r\n        : undefined;\r\n    const barcode = barcodeArrayElement\r\n      ? barcodeArrayElement\r\n      : deprecatedBarcode;\r\n\r\n    let logo;\r\n    const logoName = getLogoName(manifest, false);\r\n    if (logoName) {\r\n      const logoEntry = entries.find((entry) => entry.filename === logoName);\r\n      logo =\r\n        logoEntry && logoEntry.getData\r\n          ? await logoEntry.getData(new zip.BlobWriter('image/png'))\r\n          : undefined;\r\n      console.log(logo);\r\n    }\r\n\r\n    const pkpassWrapper: PkpassWrapperModel = {\r\n      file: file,\r\n      passType: passType,\r\n      passData: passData,\r\n      passFields: passStructure,\r\n      manifest: manifest,\r\n      barcode: barcode,\r\n      logo: logo,\r\n    };\r\n\r\n    return pkpassWrapper;\r\n  } else {\r\n    throw new DOMException('No valid Pkpass!');\r\n  }\r\n};\r\n","import { Component, Input } from '@angular/core';\r\nimport { QRCodeGeneratorService } from '../../services/qrcode-generator.service';\r\nimport { BarcodeTypeEnum } from '../../services/BarcodeType.enum';\r\n\r\n@Component({\r\n  selector: 'the-wallet-barcode',\r\n  template: `\r\n    <ng-container *ngIf=\"value && format; else spinner\">\r\n      <img class=\"barcode\" [src]=\"value | toBarcode: format\" />\r\n    </ng-container>\r\n    <ng-template #spinner>\r\n      <mat-spinner></mat-spinner>\r\n    </ng-template>\r\n  `,\r\n  styleUrls: ['./barcode.component.scss'],\r\n})\r\nexport class BarcodeComponent {\r\n  @Input()\r\n  value?: string;\r\n\r\n  @Input()\r\n  format?: BarcodeTypeEnum;\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { QRCodeGeneratorService } from '../../services/qrcode-generator.service';\r\n\r\n@Component({\r\n  selector: 'the-wallet-qrcode',\r\n  template: `\r\n    <ng-container *ngIf=\"value; else spinner\">\r\n      <img [src]=\"qrCodeDataURL\" />\r\n    </ng-container>\r\n    <ng-template #spinner>\r\n      <mat-spinner></mat-spinner>\r\n    </ng-template>\r\n  `,\r\n  styleUrls: ['./qrcode.component.scss'],\r\n})\r\nexport class QRCodeComponent implements OnChanges {\r\n  @Input()\r\n  value?: string;\r\n\r\n  qrCodeDataURL?: string;\r\n\r\n  constructor(private qrCodeGenerator: QRCodeGeneratorService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.value) {\r\n      this.qrCodeGenerator.toDataURL(this.value).subscribe({\r\n        next: (qrCodeDataURL) => (this.qrCodeDataURL = qrCodeDataURL),\r\n        error: (err) => console.error(err),\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { BarcodeTypeEnum } from '../services/BarcodeType.enum';\r\nimport { BarcodeGeneratorService } from '../services/barcode-generator.service';\r\n\r\n@Pipe({\r\n  name: 'toBarcode',\r\n})\r\nexport class ToBarcodePipe implements PipeTransform {\r\n  private static readonly DEFAULT_WIDTH_IN_MM = 50;\r\n  private static readonly DEFAULT_HEIGTH_IN_MM = 50;\r\n\r\n  constructor(private barcodeService: BarcodeGeneratorService) {}\r\n\r\n  transform(value?: string, barcodeType?: BarcodeTypeEnum): string | undefined {\r\n    try {\r\n      if (value && barcodeType) {\r\n        return this.barcodeService.generateBarcode(\r\n          value,\r\n          barcodeType,\r\n          ToBarcodePipe.DEFAULT_WIDTH_IN_MM,\r\n          ToBarcodePipe.DEFAULT_HEIGTH_IN_MM\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BarcodeComponent } from './components/barcode/barcode.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { ToBarcodePipe } from './pipes/to-barcode.pipe';\r\nimport { QRCodeComponent } from './components/qrcode/qrcode.component';\r\n\r\n@NgModule({\r\n  declarations: [BarcodeComponent, ToBarcodePipe, QRCodeComponent],\r\n  imports: [CommonModule, MatProgressSpinnerModule],\r\n  exports: [BarcodeComponent, QRCodeComponent],\r\n})\r\nexport class QRCodeGeneratorModule {}\r\n","export enum BarcodeTypeEnum {\r\n  AZTECCODE = 'azteccode',\r\n  CODE128 = 'code128',\r\n  PDF417 = 'pdf417',\r\n  QRCODE = 'qrcode',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport bwipjs from 'bwip-js';\r\nimport { BarcodeTypeEnum } from './BarcodeType.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BarcodeGeneratorService {\r\n  constructor() {}\r\n\r\n  generateBarcode(\r\n    content: string,\r\n    format: BarcodeTypeEnum,\r\n    width?: number,\r\n    heigth?: number\r\n  ): string {\r\n    const offscreenCanvas = document.createElement('canvas');\r\n    const canvas = bwipjs.toCanvas(offscreenCanvas, {\r\n      width: width,\r\n      height: heigth,\r\n      bcid: format,\r\n      text: content,\r\n    });\r\n    return canvas.toDataURL();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport QRCode from 'qrcode';\nimport { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QRCodeGeneratorService {\n  constructor() {}\n\n  toDataURL(value: string): Observable<string> {\n    return from(QRCode.toDataURL(value));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { blobToDataURL } from '../../../../commons/utils/image-conversion.utils';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'the-wallet-blob-image',\r\n  template: `\r\n    <img\r\n      *ngIf=\"imageURL$ | async as imageURL\"\r\n      [src]=\"imageURL\"\r\n      class=\"blob-image\"\r\n    />\r\n  `,\r\n  styleUrls: ['./blob-image.component.scss'],\r\n})\r\nexport class BlobImageComponent {\r\n  imageURL$?: Observable<string>;\r\n  private _blob?: Blob;\r\n\r\n  @Input()\r\n  get blob() {\r\n    return this._blob;\r\n  }\r\n  set blob(blob: Blob | undefined) {\r\n    this._blob = blob;\r\n    if (blob) {\r\n      console.log(blob);\r\n      this.imageURL$ = blobToDataURL(blob);\r\n    }\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-wallet-empty',\n  template: ``,\n})\nexport class EmptyComponent {}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-icon-button',\r\n  template: `\r\n    <button mat-icon-button>\r\n      <mat-icon><ng-content></ng-content></mat-icon>\r\n    </button>\r\n  `,\r\n  styleUrls: ['./icon-button.component.scss'],\r\n})\r\nexport class IconButtonComponent {}\r\n","import { Component } from '@angular/core';\r\n\r\n/* Spinner doesn't freeze when Thread is blocked, because it uses CSS animations\r\n * */\r\n@Component({\r\n  selector: 'the-wallet-non-freezing-spinner',\r\n  template: ` <div class=\"the-wallet-spinner\"></div> `,\r\n  styleUrls: ['./non-freezing-spinner.component.scss'],\r\n})\r\nexport class NonFreezingSpinnerComponent {}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ActionListItemModel } from '../../../ActionListItem.model';\r\n\r\n@Component({\r\n  selector: 'the-wallet-action-menu',\r\n  template: `\r\n    <mat-action-list>\r\n      <mat-list-item\r\n        *ngFor=\"let actionItem of actionList\"\r\n        (click)=\"actionItem.action(actionItem)\"\r\n      >\r\n        <mat-icon mat-list-icon>{{ actionItem.matIcon }}</mat-icon>\r\n        <span mat-line>{{ actionItem.name }}</span>\r\n      </mat-list-item>\r\n    </mat-action-list>\r\n  `,\r\n  styleUrls: ['./action-menu.component.scss'],\r\n})\r\nexport class ActionMenuComponent {\r\n  @Input()\r\n  actionList: ActionListItemModel[] = [];\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-default-expansion-panel',\r\n  template: `\r\n    <mat-expansion-panel class=\"default-expansion-panel\" [expanded]=\"expanded\">\r\n      <mat-expansion-panel-header expandedHeight=\"48px\">\r\n        <mat-panel-title>\r\n          {{ title }}\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <ng-content></ng-content>\r\n    </mat-expansion-panel>\r\n  `,\r\n  styleUrls: ['./default-expansion-panel.component.scss'],\r\n})\r\nexport class DefaultExpansionPanelComponent {\r\n  @Input()\r\n  title = '';\r\n\r\n  @Input()\r\n  expanded = true;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'the-wallet-download-button',\n  template: `<the-wallet-icon-button>download</the-wallet-icon-button>`,\n  styleUrls: ['./download-button.component.scss'],\n})\nexport class DownloadButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-wallet-share-button',\n  template: `<the-wallet-icon-button>share</the-wallet-icon-button>`,\n  styleUrls: ['./share-button.component.scss'],\n})\nexport class ShareButtonComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { ActionListItemModel } from '../../../ActionListItem.model';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'the-wallet-action-menu-sheet',\n  template: `\n    <the-wallet-action-menu [actionList]=\"actionList\"></the-wallet-action-menu>\n  `,\n  styleUrls: ['./action-menu-sheet.component.scss'],\n})\nexport class ActionMenuSheetComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public actionList: ActionListItemModel[]\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n  MatBottomSheet,\n  MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { ActionMenuSheetComponent } from '../components/organisms/action-menu-sheet/action-menu-sheet.component';\nimport { ActionListItemModel } from '../ActionListItem.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionMenuSheetService {\n  private bottomSheetRef?: MatBottomSheetRef<ActionMenuSheetComponent, any>;\n\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  open(actionList: ActionListItemModel[]) {\n    this.bottomSheetRef = this.bottomSheet.open<\n      ActionMenuSheetComponent,\n      ActionListItemModel[],\n      any\n    >(ActionMenuSheetComponent, {\n      data: actionList,\n    });\n  }\n\n  close() {\n    if (this.bottomSheetRef && this.bottomSheetRef) {\n      this.bottomSheetRef.dismiss();\n      this.bottomSheetRef = undefined;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { NonFreezingSpinnerComponent } from '../components/atoms/non-freezing-spinner/non-freezing-spinner.component';\nimport { ComponentType } from '@angular/cdk/portal/portal';\nimport { EmptyComponent } from '../components/atoms/empty/empty.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OverlayService {\n  overlayRef: OverlayRef;\n\n  constructor(private overlay: Overlay) {\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy: this.overlay\n        .position()\n        .global()\n        .centerHorizontally()\n        .centerVertically(),\n    });\n  }\n\n  open(component: ComponentType<any>) {\n    const progressSpinnerPortal = new ComponentPortal(component);\n    this.overlayRef.detach();\n    this.overlayRef.attach(progressSpinnerPortal);\n  }\n\n  openEmptyOverlay() {\n    this.open(EmptyComponent);\n  }\n\n  openSpinnerOverlay() {\n    this.open(NonFreezingSpinnerComponent);\n  }\n\n  close() {\n    this.overlayRef.detach();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSnackBarConfig } from '@angular/material/snack-bar/snack-bar-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserMessageService {\r\n  static readonly MESSAGE_ACTION = 'OK';\r\n  static readonly MESSAGE_CONFIG: MatSnackBarConfig = {\r\n    duration: 5000,\r\n  };\r\n\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  showUserMessage(\r\n    message: string,\r\n    action: string = UserMessageService.MESSAGE_ACTION,\r\n    config: MatSnackBarConfig = UserMessageService.MESSAGE_CONFIG\r\n  ) {\r\n    this.snackBar.open(message, action, config);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { IconButtonComponent } from './components/atoms/icon-button/icon-button.component';\r\nimport { ActionMenuComponent } from './components/molecules/action-menu/action-menu.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { ActionMenuSheetComponent } from './components/organisms/action-menu-sheet/action-menu-sheet.component';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NonFreezingSpinnerComponent } from './components/atoms/non-freezing-spinner/non-freezing-spinner.component';\r\nimport { EmptyComponent } from './components/atoms/empty/empty.component';\r\nimport { ShareButtonComponent } from './components/molecules/share-button/share-button.component';\r\nimport { DownloadButtonComponent } from './components/molecules/download-button/download-button.component';\r\nimport { BlobImageComponent } from './components/atoms/blob-image/blob-image.component';\r\nimport { DefaultExpansionPanelComponent } from './components/molecules/default-expansion-panel/default-expansion-panel.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IconButtonComponent,\r\n    ActionMenuComponent,\r\n    ActionMenuSheetComponent,\r\n    NonFreezingSpinnerComponent,\r\n    EmptyComponent,\r\n    ShareButtonComponent,\r\n    DownloadButtonComponent,\r\n    BlobImageComponent,\r\n    DefaultExpansionPanelComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatBottomSheetModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule,\r\n  ],\r\n  exports: [\r\n    IconButtonComponent,\r\n    ActionMenuComponent,\r\n    ActionMenuSheetComponent,\r\n    NonFreezingSpinnerComponent,\r\n    ShareButtonComponent,\r\n    DownloadButtonComponent,\r\n    BlobImageComponent,\r\n    DefaultExpansionPanelComponent,\r\n  ],\r\n})\r\nexport class UiComponentsModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'fileToShareData',\r\n})\r\nexport class FileToShareDataPipe implements PipeTransform {\r\n  transform(value: File, text: string, title: string): ShareData {\r\n    return {\r\n      files: [value],\r\n      text: text,\r\n      title: title,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebShareService {\n  constructor() {}\n\n  isSupported() {\n    return 'canShare' in navigator && 'share' in navigator;\n  }\n\n  canShare(data: ShareData) {\n    return this.isSupported() && navigator.canShare(data);\n  }\n\n  share(data: ShareData) {\n    return from(navigator.share(data));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FileToShareDataPipe } from './pipes/file-to-share-data.pipe';\r\n\r\n@NgModule({\r\n  declarations: [FileToShareDataPipe],\r\n  imports: [CommonModule],\r\n  exports: [FileToShareDataPipe],\r\n})\r\nexport class WebShareModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DocumentModel } from '../models/Document.model';\nimport _ from 'lodash';\n\n@Pipe({\n  name: 'sortDocumentsByArray',\n})\nexport class SortDocumentsByArrayPipe implements PipeTransform {\n  transform(documents: DocumentModel[], sortOrder: string[]): DocumentModel[] {\n    const sortedArray = _.sortBy(documents, (document) => {\n      return sortOrder.indexOf(document.id);\n    });\n    return sortedArray;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { DedicatedInstanceFactory, Driver, NgForage } from 'ngforage';\r\nimport { from, Observable, Subject, tap } from 'rxjs';\r\n// @ts-ignore\r\nimport memoryStorageDriver from 'localforage-memoryStorageDriver/dist/localforage-memoryStorageDriver.es6';\r\nimport { DocumentModel } from '../models/Document.model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DocumentChange } from '../models/DocumentModelChange.type';\r\nimport { SortStoreService } from './sort-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DocumentStoreService {\r\n  private readonly ngForage: NgForage;\r\n\r\n  documentChangeSource: Subject<DocumentChange> = new Subject<DocumentChange>();\r\n  documentChange$ = this.documentChangeSource.asObservable();\r\n\r\n  constructor(\r\n    private readonly dedicatedInstanceFactory: DedicatedInstanceFactory,\r\n    private readonly sortStore: SortStoreService\r\n  ) {\r\n    //Custom Config for NG-Forage is necessary because we need two StoreInstance. One for this Service and one for sort-store.\r\n    //See: https://github.com/Alorel/ngforage/issues/53\r\n    this.ngForage = dedicatedInstanceFactory.createNgForage({\r\n      name: 'DocumentStore',\r\n      driver: [\r\n        Driver.INDEXED_DB,\r\n        Driver.WEB_SQL,\r\n        Driver.LOCAL_STORAGE,\r\n        memoryStorageDriver,\r\n      ],\r\n    });\r\n  }\r\n\r\n  getDocuments(): Observable<DocumentModel> {\r\n    const documentSource = new Subject<DocumentModel>();\r\n    const document$ = documentSource.asObservable();\r\n\r\n    this.ngForage\r\n      .iterate<DocumentModel, void>((document, key, number) => {\r\n        documentSource.next(document);\r\n      })\r\n      .then(() => {\r\n        documentSource.complete();\r\n      })\r\n      .catch((err) => {\r\n        documentSource.error(err);\r\n      });\r\n    return document$;\r\n  }\r\n\r\n  getDocument(id: string): Observable<DocumentModel | null> {\r\n    return from(this.ngForage.getItem<DocumentModel>(id));\r\n  }\r\n\r\n  updateDocument(id: string, document: DocumentModel) {\r\n    document.id = id;\r\n    return from(this.ngForage.setItem<DocumentModel>(id, document)).pipe(\r\n      tap((resultDocument) =>\r\n        this.documentChangeSource.next({\r\n          id: resultDocument.id,\r\n          document: resultDocument,\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  saveDocument(document: DocumentModel) {\r\n    console.log(document);\r\n    document.id = document.id ? document.id : uuid();\r\n    return from(\r\n      this.ngForage.setItem<DocumentModel>(document.id, document)\r\n    ).pipe(\r\n      tap((resultDocument) => {\r\n        console.log(resultDocument);\r\n      }),\r\n      tap((resultDocument) =>\r\n        this.documentChangeSource.next({\r\n          id: resultDocument.id,\r\n          document: resultDocument,\r\n        })\r\n      ),\r\n      tap(() => {\r\n        this.sortStore.addKey(document.id).subscribe();\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteDocument(id: string) {\r\n    return from(this.ngForage.removeItem(id)).pipe(\r\n      tap(() => this.documentChangeSource.next({ id: id, document: null })),\r\n      tap(() => {\r\n        this.sortStore.removeKey(id).subscribe();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { concatMap, from, map, Subject, tap } from 'rxjs';\nimport { DedicatedInstanceFactory, Driver, NgForage } from 'ngforage';\n// @ts-ignore\nimport memoryStorageDriver from 'localforage-memoryStorageDriver/dist/localforage-memoryStorageDriver.es6';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SortStoreService {\n  static readonly SORT_ORDER_KEY = 'SORT_ORDER';\n\n  sortOrderSource: Subject<string[]> = new Subject<string[]>();\n  sortOrder$ = this.sortOrderSource.asObservable();\n\n  constructor(\n    private readonly ngForage: NgForage,\n    private readonly dedicatedInstanceFactory: DedicatedInstanceFactory\n  ) {\n    this.ngForage = dedicatedInstanceFactory.createNgForage({\n      name: 'SortStore',\n      driver: [\n        Driver.INDEXED_DB,\n        Driver.WEB_SQL,\n        Driver.LOCAL_STORAGE,\n        memoryStorageDriver,\n      ],\n    });\n  }\n\n  updateSortOrder(ids: string[]) {\n    return from(\n      this.ngForage.setItem<string[]>(SortStoreService.SORT_ORDER_KEY, ids)\n    ).pipe(tap((sortOrder) => this.sortOrderSource.next(sortOrder)));\n  }\n\n  addKey(id: string) {\n    return this.getSortOrder().pipe(\n      concatMap((sortOrder) => {\n        sortOrder.push(id);\n        return this.updateSortOrder(sortOrder);\n      })\n    );\n  }\n\n  removeKey(id: string) {\n    return this.getSortOrder().pipe(\n      map((sortOrder) => sortOrder.filter((key) => key !== id)),\n      concatMap((sortOrder) => this.updateSortOrder(sortOrder))\n    );\n  }\n\n  getSortOrder() {\n    return from(\n      this.ngForage.getItem<string[]>(SortStoreService.SORT_ORDER_KEY)\n    ).pipe(map((sortOrder) => (sortOrder ? sortOrder : [])));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WalletPageComponent } from './components/pages/wallet-page/wallet-page.component';\r\nimport { RouteNotFoundPageComponent } from './components/pages/route-not-found-page/route-not-found-page.component';\r\nimport { DocumentPageComponent } from './components/pages/document-page/document-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'wallet', component: WalletPageComponent },\r\n  { path: 'document/:id', component: DocumentPageComponent },\r\n  { path: '404', component: RouteNotFoundPageComponent },\r\n  { path: '', redirectTo: '/wallet', pathMatch: 'full' },\r\n  { path: '**', redirectTo: '/404' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class TheWalletRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-wallet-root',\r\n  templateUrl: './the-wallet.component.html',\r\n  styleUrls: ['./the-wallet.component.scss'],\r\n})\r\nexport class TheWalletComponent {}\r\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TheWalletRoutingModule } from './the-wallet-routing.module';\nimport { TheWalletComponent } from './the-wallet.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CameraModule } from './modules/camera-module/camera.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HealthCertificateModule } from './modules/health-certificate/health-certificate.module';\nimport { DEFAULT_CONFIG, Driver, NgForageOptions } from 'ngforage';\n// @ts-ignore\nimport memoryStorageDriver from 'localforage-memoryStorageDriver/dist/localforage-memoryStorageDriver.es6';\nimport { DocumentPageComponent } from './components/pages/document-page/document-page.component';\nimport { RouteNotFoundPageComponent } from './components/pages/route-not-found-page/route-not-found-page.component';\nimport { PageTemplateComponent } from './components/templates/page-template/page-template.component';\nimport { WalletPageComponent } from './components/pages/wallet-page/wallet-page.component';\nimport { DocumentListComponent } from './components/organisms/document-list/document-list.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { DocumentListElementComponent } from './components/organisms/document-list-element/document-list-element.component';\nimport { SortDocumentsByArrayPipe } from './pipes/sort-by-array.pipe';\nimport { UiComponentsModule } from './modules/ui-components/ui-components.module';\nimport { PageTemplateHeaderDirective } from './components/templates/page-template/page-template-header.directive';\nimport { AppBarComponent } from './components/molecules/app-bar/app-bar.component';\nimport { AppBarStartElementsDirective } from './components/molecules/app-bar/app-bar-start-elements.directive';\nimport { AppBarEndElementsDirective } from './components/molecules/app-bar/app-bar-end-elements.directive';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FileSystemModule } from './modules/file-system/file-system.module';\nimport { DocumentComponent } from './components/organisms/document/document.component';\nimport { DocumentShareButtonComponent } from './components/organisms/document-share-button/document-share-button.component';\nimport { DocumentDownloadButtonComponent } from './components/organisms/document-download-button/document-download-button.component';\nimport { QRCodeGeneratorModule } from './modules/qrcode-generator/qrcode-generator.module';\nimport { CommonsModule } from './modules/commons/commons.module';\nimport { PkpassModule } from './modules/pkpass/pkpass.module';\nimport { DragDropSliderComponent } from './components/molecules/drag-drop-slider/drag-drop-slider.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    TheWalletComponent,\n    DocumentPageComponent,\n    WalletPageComponent,\n    RouteNotFoundPageComponent,\n    PageTemplateComponent,\n    DocumentListComponent,\n    DocumentListElementComponent,\n    SortDocumentsByArrayPipe,\n    PageTemplateHeaderDirective,\n    AppBarComponent,\n    AppBarStartElementsDirective,\n    AppBarEndElementsDirective,\n    DocumentComponent,\n    DocumentShareButtonComponent,\n    DocumentDownloadButtonComponent,\n    DragDropSliderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    TheWalletRoutingModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n    MatToolbarModule,\n    CameraModule,\n    MatIconModule,\n    MatButtonModule,\n    HealthCertificateModule,\n    DragDropModule,\n    UiComponentsModule,\n    MatProgressSpinnerModule,\n    FileSystemModule,\n    QRCodeGeneratorModule,\n    CommonsModule,\n    PkpassModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      // Initilaize Local Forage Driver\n      provide: DEFAULT_CONFIG,\n      useValue: {\n        name: 'theWalletCertificateStore',\n        //Use default Indexdb -> WebSQL -> LocalStorage -> MemoryStorage\n        driver: [\n          Driver.INDEXED_DB,\n          Driver.WEB_SQL,\n          Driver.LOCAL_STORAGE,\n          memoryStorageDriver,\n        ],\n      } as NgForageOptions,\n    },\n  ],\n  exports: [DocumentComponent],\n  bootstrap: [TheWalletComponent],\n})\nexport class TheWalletModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {TheWalletModule} from './app/the-wallet.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(TheWalletModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["ImageCaptureApi","constructor","track","DOMException","kind","MEDIA_STREAM_TRACK_KIND_VIDEO","_videoElement","document","createElement","playsInline","_canvasElement","_context","getContext","mediaStream","MediaStream","srcObject","_isPlayingPromise","play","getPhotoCapabilities","console","warn","photoCapabilities","redEyeReduction","fillLightMode","imageHeight","max","min","step","imageWidth","Promise","resolve","getPhotoSettings","undefined","grabFrame","context","drawImageToCanvas","imageData","getImageData","width","height","imageBitMap","createImageBitmap","readyState","READY_STATE_LIVE","then","videoWidth","videoHeight","drawImage","canvas","takePhoto","photoSettings","log","reject","toBlob","blob","window","ImageCapture","Subject","ImageCaptureUtils","CameraService","qrcodeReaderService","featureDetectionService","mediaStreamSource","asObservable","pictureSource","qrCodeSource","video","facingMode","audio","getImplementation","supportsCameraApi","getUserMedia","supportsEnumerateDevicesApi","enumerateDevices","supportsTakingPictures","imageCapture","supportsFlashlight","getSupportedConstraints","navigator","mediaDevices","torch","switchCamera","getAvailableVideoDevices","mediaDeviceInfos","length","start","deviceId","currentDeviceId","_a","active","getTracks","id","otherVideoDevices","filter","mediaDeviceInfo","MEDIA_DEVICE_KIND_VIDEOINPUT","stop","imageCaptureApi","tracks","forEach","scanStreamForQrCodes","requestAnimationFrame","getVideoTracks","qrCode","detectImage","next","exception","error","takePicture","takePictureOfStream","catch","reason","constraints","scanForQRCodes","mediaDevicePromise","DEFAULT_CONSTRAINTS","i0","factory","providedIn","NativeQrcodeReaderService","FeatureDetectionService","init","detectQRCodeReader","e","_isInit","isInit","_qrCodeReader","supportsNativeQRCodeApi","qrCodeReader","mediaStreamTracks","picture","jsQR","JsQrcodeReaderService","qrCodeModel","code","data","binaryData","value","initializeBarcodeDetector","barcodeFormat","barcodeFormatIsSupported","detectSupportedBarCodeFormat","BarcodeDetector","formats","initializeQRCodeReader","qrBarcodeDetector","BARCODE_FORMAT_QR_CODE","barcodeFormats","getSupportedFormats","every","format","includes","qrCodeDetector","codes","detect","map","rawValue","EventEmitter","HealthCertificateAbstractButtonComponent","ctx_r2","HealthCertificateDownloadButtonComponent","_qrCodeService","selectors","outputs","download","features","decls","vars","consts","template","AbstractDocumentComponent","ctx_r0","healthCertificateClaim_r1","HealthCertificateComponent","covidCertificateService","ngOnChanges","changes","currentValue","healthCertificateClaim$","decode","zip","PassTypeEnum","passDataToPassStructure","passData","BOARDINGPASS","boardingPass","COUPON","coupon","EVENTICKET","eventTicket","GENERIC","generic","STORECARD","storeCard","getLogoName","manifest","highResolution","manifestEntries","Object","entries","logos","entry","startsWith","sort","readPKPASS","file","reader","ZipReader","BlobReader","getEntries","passJSONEntry","find","filename","manifestJSONEntry","getData","passText","TextWriter","manifestText","JSON","parse","passType","passStructure","deprecatedBarcode","barcode","barcodeArrayElement","barcodes","logo","logoName","logoEntry","BlobWriter","pkpassWrapper","passFields","blobToDataURL","BlobImageComponent","_blob","imageURL$","inputs"],"sourceRoot":"webpack:///"}